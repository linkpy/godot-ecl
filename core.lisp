
(PROGN
 (FFI:DEF-STRUCT GODOT-GDNATIVE-CORE-1.0-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (NUM-EXTENSIONS :UNSIGNED-INT)
                 (EXTENSIONS (* (* 'GODOT-GDNATIVE-API-STRUCT)))
                 (GODOT-COLOR-NEW-RGBA :POINTER-VOID)
                 (GODOT-COLOR-NEW-RGB :POINTER-VOID)
                 (GODOT-COLOR-GET-R :POINTER-VOID)
                 (GODOT-COLOR-SET-R :POINTER-VOID)
                 (GODOT-COLOR-GET-G :POINTER-VOID)
                 (GODOT-COLOR-SET-G :POINTER-VOID)
                 (GODOT-COLOR-GET-B :POINTER-VOID)
                 (GODOT-COLOR-SET-B :POINTER-VOID)
                 (GODOT-COLOR-GET-A :POINTER-VOID)
                 (GODOT-COLOR-SET-A :POINTER-VOID)
                 (GODOT-COLOR-GET-H :POINTER-VOID)
                 (GODOT-COLOR-GET-S :POINTER-VOID)
                 (GODOT-COLOR-GET-V :POINTER-VOID)
                 (GODOT-COLOR-AS-STRING :POINTER-VOID)
                 (GODOT-COLOR-TO-RGBA32 :POINTER-VOID)
                 (GODOT-COLOR-TO-ARGB32 :POINTER-VOID)
                 (GODOT-COLOR-GRAY :POINTER-VOID)
                 (GODOT-COLOR-INVERTED :POINTER-VOID)
                 (GODOT-COLOR-CONTRASTED :POINTER-VOID)
                 (GODOT-COLOR-LINEAR-INTERPOLATE :POINTER-VOID)
                 (GODOT-COLOR-BLEND :POINTER-VOID)
                 (GODOT-COLOR-TO-HTML :POINTER-VOID)
                 (GODOT-COLOR-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-COLOR-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-VECTOR2-NEW :POINTER-VOID)
                 (GODOT-VECTOR2-AS-STRING :POINTER-VOID)
                 (GODOT-VECTOR2-NORMALIZED :POINTER-VOID)
                 (GODOT-VECTOR2-LENGTH :POINTER-VOID)
                 (GODOT-VECTOR2-ANGLE :POINTER-VOID)
                 (GODOT-VECTOR2-LENGTH-SQUARED :POINTER-VOID)
                 (GODOT-VECTOR2-IS-NORMALIZED :POINTER-VOID)
                 (GODOT-VECTOR2-DISTANCE-TO :POINTER-VOID)
                 (GODOT-VECTOR2-DISTANCE-SQUARED-TO :POINTER-VOID)
                 (GODOT-VECTOR2-ANGLE-TO :POINTER-VOID)
                 (GODOT-VECTOR2-ANGLE-TO-POINT :POINTER-VOID)
                 (GODOT-VECTOR2-LINEAR-INTERPOLATE :POINTER-VOID)
                 (GODOT-VECTOR2-CUBIC-INTERPOLATE :POINTER-VOID)
                 (GODOT-VECTOR2-ROTATED :POINTER-VOID)
                 (GODOT-VECTOR2-TANGENT :POINTER-VOID)
                 (GODOT-VECTOR2-FLOOR :POINTER-VOID)
                 (GODOT-VECTOR2-SNAPPED :POINTER-VOID)
                 (GODOT-VECTOR2-ASPECT :POINTER-VOID)
                 (GODOT-VECTOR2-DOT :POINTER-VOID)
                 (GODOT-VECTOR2-SLIDE :POINTER-VOID)
                 (GODOT-VECTOR2-BOUNCE :POINTER-VOID)
                 (GODOT-VECTOR2-REFLECT :POINTER-VOID)
                 (GODOT-VECTOR2-ABS :POINTER-VOID)
                 (GODOT-VECTOR2-CLAMPED :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-ADD :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-SUBTRACT :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-MULTIPLY-VECTOR :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-MULTIPLY-SCALAR :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-DIVIDE-VECTOR :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-DIVIDE-SCALAR :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-VECTOR2-OPERATOR-NEG :POINTER-VOID)
                 (GODOT-VECTOR2-SET-X :POINTER-VOID)
                 (GODOT-VECTOR2-SET-Y :POINTER-VOID)
                 (GODOT-VECTOR2-GET-X :POINTER-VOID)
                 (GODOT-VECTOR2-GET-Y :POINTER-VOID)
                 (GODOT-QUAT-NEW :POINTER-VOID)
                 (GODOT-QUAT-NEW-WITH-AXIS-ANGLE :POINTER-VOID)
                 (GODOT-QUAT-GET-X :POINTER-VOID)
                 (GODOT-QUAT-SET-X :POINTER-VOID)
                 (GODOT-QUAT-GET-Y :POINTER-VOID)
                 (GODOT-QUAT-SET-Y :POINTER-VOID)
                 (GODOT-QUAT-GET-Z :POINTER-VOID)
                 (GODOT-QUAT-SET-Z :POINTER-VOID)
                 (GODOT-QUAT-GET-W :POINTER-VOID)
                 (GODOT-QUAT-SET-W :POINTER-VOID)
                 (GODOT-QUAT-AS-STRING :POINTER-VOID)
                 (GODOT-QUAT-LENGTH :POINTER-VOID)
                 (GODOT-QUAT-LENGTH-SQUARED :POINTER-VOID)
                 (GODOT-QUAT-NORMALIZED :POINTER-VOID)
                 (GODOT-QUAT-IS-NORMALIZED :POINTER-VOID)
                 (GODOT-QUAT-INVERSE :POINTER-VOID)
                 (GODOT-QUAT-DOT :POINTER-VOID)
                 (GODOT-QUAT-XFORM :POINTER-VOID)
                 (GODOT-QUAT-SLERP :POINTER-VOID)
                 (GODOT-QUAT-SLERPNI :POINTER-VOID)
                 (GODOT-QUAT-CUBIC-SLERP :POINTER-VOID)
                 (GODOT-QUAT-OPERATOR-MULTIPLY :POINTER-VOID)
                 (GODOT-QUAT-OPERATOR-ADD :POINTER-VOID)
                 (GODOT-QUAT-OPERATOR-SUBTRACT :POINTER-VOID)
                 (GODOT-QUAT-OPERATOR-DIVIDE :POINTER-VOID)
                 (GODOT-QUAT-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-QUAT-OPERATOR-NEG :POINTER-VOID)
                 (GODOT-BASIS-NEW-WITH-ROWS :POINTER-VOID)
                 (GODOT-BASIS-NEW-WITH-AXIS-AND-ANGLE :POINTER-VOID)
                 (GODOT-BASIS-NEW-WITH-EULER :POINTER-VOID)
                 (GODOT-BASIS-AS-STRING :POINTER-VOID)
                 (GODOT-BASIS-INVERSE :POINTER-VOID)
                 (GODOT-BASIS-TRANSPOSED :POINTER-VOID)
                 (GODOT-BASIS-ORTHONORMALIZED :POINTER-VOID)
                 (GODOT-BASIS-DETERMINANT :POINTER-VOID)
                 (GODOT-BASIS-ROTATED :POINTER-VOID)
                 (GODOT-BASIS-SCALED :POINTER-VOID)
                 (GODOT-BASIS-GET-SCALE :POINTER-VOID)
                 (GODOT-BASIS-GET-EULER :POINTER-VOID)
                 (GODOT-BASIS-TDOTX :POINTER-VOID)
                 (GODOT-BASIS-TDOTY :POINTER-VOID)
                 (GODOT-BASIS-TDOTZ :POINTER-VOID)
                 (GODOT-BASIS-XFORM :POINTER-VOID)
                 (GODOT-BASIS-XFORM-INV :POINTER-VOID)
                 (GODOT-BASIS-GET-ORTHOGONAL-INDEX :POINTER-VOID)
                 (GODOT-BASIS-NEW :POINTER-VOID)
                 (GODOT-BASIS-NEW-WITH-EULER-QUAT :POINTER-VOID)
                 (GODOT-BASIS-GET-ELEMENTS :POINTER-VOID)
                 (GODOT-BASIS-GET-AXIS :POINTER-VOID)
                 (GODOT-BASIS-SET-AXIS :POINTER-VOID)
                 (GODOT-BASIS-GET-ROW :POINTER-VOID)
                 (GODOT-BASIS-SET-ROW :POINTER-VOID)
                 (GODOT-BASIS-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-BASIS-OPERATOR-ADD :POINTER-VOID)
                 (GODOT-BASIS-OPERATOR-SUBTRACT :POINTER-VOID)
                 (GODOT-BASIS-OPERATOR-MULTIPLY-VECTOR :POINTER-VOID)
                 (GODOT-BASIS-OPERATOR-MULTIPLY-SCALAR :POINTER-VOID)
                 (GODOT-VECTOR3-NEW :POINTER-VOID)
                 (GODOT-VECTOR3-AS-STRING :POINTER-VOID)
                 (GODOT-VECTOR3-MIN-AXIS :POINTER-VOID)
                 (GODOT-VECTOR3-MAX-AXIS :POINTER-VOID)
                 (GODOT-VECTOR3-LENGTH :POINTER-VOID)
                 (GODOT-VECTOR3-LENGTH-SQUARED :POINTER-VOID)
                 (GODOT-VECTOR3-IS-NORMALIZED :POINTER-VOID)
                 (GODOT-VECTOR3-NORMALIZED :POINTER-VOID)
                 (GODOT-VECTOR3-INVERSE :POINTER-VOID)
                 (GODOT-VECTOR3-SNAPPED :POINTER-VOID)
                 (GODOT-VECTOR3-ROTATED :POINTER-VOID)
                 (GODOT-VECTOR3-LINEAR-INTERPOLATE :POINTER-VOID)
                 (GODOT-VECTOR3-CUBIC-INTERPOLATE :POINTER-VOID)
                 (GODOT-VECTOR3-DOT :POINTER-VOID)
                 (GODOT-VECTOR3-CROSS :POINTER-VOID)
                 (GODOT-VECTOR3-OUTER :POINTER-VOID)
                 (GODOT-VECTOR3-TO-DIAGONAL-MATRIX :POINTER-VOID)
                 (GODOT-VECTOR3-ABS :POINTER-VOID)
                 (GODOT-VECTOR3-FLOOR :POINTER-VOID)
                 (GODOT-VECTOR3-CEIL :POINTER-VOID)
                 (GODOT-VECTOR3-DISTANCE-TO :POINTER-VOID)
                 (GODOT-VECTOR3-DISTANCE-SQUARED-TO :POINTER-VOID)
                 (GODOT-VECTOR3-ANGLE-TO :POINTER-VOID)
                 (GODOT-VECTOR3-SLIDE :POINTER-VOID)
                 (GODOT-VECTOR3-BOUNCE :POINTER-VOID)
                 (GODOT-VECTOR3-REFLECT :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-ADD :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-SUBTRACT :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-MULTIPLY-VECTOR :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-MULTIPLY-SCALAR :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-DIVIDE-VECTOR :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-DIVIDE-SCALAR :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-VECTOR3-OPERATOR-NEG :POINTER-VOID)
                 (GODOT-VECTOR3-SET-AXIS :POINTER-VOID)
                 (GODOT-VECTOR3-GET-AXIS :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-NEW :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-NEW-WITH-ARRAY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-APPEND-ARRAY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-READ :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-WRITE :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-SET :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-GET :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-READ-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-READ-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-READ-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-COPY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-PTR :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
                  :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-DESTROY :POINTER-VOID)
                 (GODOT-ARRAY-NEW :POINTER-VOID)
                 (GODOT-ARRAY-NEW-COPY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-COLOR-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-VECTOR3-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-VECTOR2-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-STRING-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-REAL-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-INT-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-NEW-POOL-BYTE-ARRAY :POINTER-VOID)
                 (GODOT-ARRAY-SET :POINTER-VOID)
                 (GODOT-ARRAY-GET :POINTER-VOID)
                 (GODOT-ARRAY-OPERATOR-INDEX :POINTER-VOID)
                 (GODOT-ARRAY-OPERATOR-INDEX-CONST :POINTER-VOID)
                 (GODOT-ARRAY-APPEND :POINTER-VOID)
                 (GODOT-ARRAY-CLEAR :POINTER-VOID)
                 (GODOT-ARRAY-COUNT :POINTER-VOID)
                 (GODOT-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-ARRAY-ERASE :POINTER-VOID)
                 (GODOT-ARRAY-FRONT :POINTER-VOID)
                 (GODOT-ARRAY-BACK :POINTER-VOID)
                 (GODOT-ARRAY-FIND :POINTER-VOID)
                 (GODOT-ARRAY-FIND-LAST :POINTER-VOID)
                 (GODOT-ARRAY-HAS :POINTER-VOID)
                 (GODOT-ARRAY-HASH :POINTER-VOID)
                 (GODOT-ARRAY-INSERT :POINTER-VOID)
                 (GODOT-ARRAY-INVERT :POINTER-VOID)
                 (GODOT-ARRAY-POP-BACK :POINTER-VOID)
                 (GODOT-ARRAY-POP-FRONT :POINTER-VOID)
                 (GODOT-ARRAY-PUSH-BACK :POINTER-VOID)
                 (GODOT-ARRAY-PUSH-FRONT :POINTER-VOID)
                 (GODOT-ARRAY-REMOVE :POINTER-VOID)
                 (GODOT-ARRAY-RESIZE :POINTER-VOID)
                 (GODOT-ARRAY-RFIND :POINTER-VOID)
                 (GODOT-ARRAY-SIZE :POINTER-VOID)
                 (GODOT-ARRAY-SORT :POINTER-VOID)
                 (GODOT-ARRAY-SORT-CUSTOM :POINTER-VOID)
                 (GODOT-ARRAY-BSEARCH :POINTER-VOID)
                 (GODOT-ARRAY-BSEARCH-CUSTOM :POINTER-VOID)
                 (GODOT-ARRAY-DESTROY :POINTER-VOID)
                 (GODOT-DICTIONARY-NEW :POINTER-VOID)
                 (GODOT-DICTIONARY-NEW-COPY :POINTER-VOID)
                 (GODOT-DICTIONARY-DESTROY :POINTER-VOID)
                 (GODOT-DICTIONARY-SIZE :POINTER-VOID)
                 (GODOT-DICTIONARY-EMPTY :POINTER-VOID)
                 (GODOT-DICTIONARY-CLEAR :POINTER-VOID)
                 (GODOT-DICTIONARY-HAS :POINTER-VOID)
                 (GODOT-DICTIONARY-HAS-ALL :POINTER-VOID)
                 (GODOT-DICTIONARY-ERASE :POINTER-VOID)
                 (GODOT-DICTIONARY-HASH :POINTER-VOID)
                 (GODOT-DICTIONARY-KEYS :POINTER-VOID)
                 (GODOT-DICTIONARY-VALUES :POINTER-VOID)
                 (GODOT-DICTIONARY-GET :POINTER-VOID)
                 (GODOT-DICTIONARY-SET :POINTER-VOID)
                 (GODOT-DICTIONARY-OPERATOR-INDEX :POINTER-VOID)
                 (GODOT-DICTIONARY-OPERATOR-INDEX-CONST :POINTER-VOID)
                 (GODOT-DICTIONARY-NEXT :POINTER-VOID)
                 (GODOT-DICTIONARY-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-DICTIONARY-TO-JSON :POINTER-VOID)
                 (GODOT-NODE-PATH-NEW :POINTER-VOID)
                 (GODOT-NODE-PATH-NEW-COPY :POINTER-VOID)
                 (GODOT-NODE-PATH-DESTROY :POINTER-VOID)
                 (GODOT-NODE-PATH-AS-STRING :POINTER-VOID)
                 (GODOT-NODE-PATH-IS-ABSOLUTE :POINTER-VOID)
                 (GODOT-NODE-PATH-GET-NAME-COUNT :POINTER-VOID)
                 (GODOT-NODE-PATH-GET-NAME :POINTER-VOID)
                 (GODOT-NODE-PATH-GET-SUBNAME-COUNT :POINTER-VOID)
                 (GODOT-NODE-PATH-GET-SUBNAME :POINTER-VOID)
                 (GODOT-NODE-PATH-GET-CONCATENATED-SUBNAMES :POINTER-VOID)
                 (GODOT-NODE-PATH-IS-EMPTY :POINTER-VOID)
                 (GODOT-NODE-PATH-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-PLANE-NEW-WITH-REALS :POINTER-VOID)
                 (GODOT-PLANE-NEW-WITH-VECTORS :POINTER-VOID)
                 (GODOT-PLANE-NEW-WITH-NORMAL :POINTER-VOID)
                 (GODOT-PLANE-AS-STRING :POINTER-VOID)
                 (GODOT-PLANE-NORMALIZED :POINTER-VOID)
                 (GODOT-PLANE-CENTER :POINTER-VOID)
                 (GODOT-PLANE-GET-ANY-POINT :POINTER-VOID)
                 (GODOT-PLANE-IS-POINT-OVER :POINTER-VOID)
                 (GODOT-PLANE-DISTANCE-TO :POINTER-VOID)
                 (GODOT-PLANE-HAS-POINT :POINTER-VOID)
                 (GODOT-PLANE-PROJECT :POINTER-VOID)
                 (GODOT-PLANE-INTERSECT-3 :POINTER-VOID)
                 (GODOT-PLANE-INTERSECTS-RAY :POINTER-VOID)
                 (GODOT-PLANE-INTERSECTS-SEGMENT :POINTER-VOID)
                 (GODOT-PLANE-OPERATOR-NEG :POINTER-VOID)
                 (GODOT-PLANE-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-PLANE-SET-NORMAL :POINTER-VOID)
                 (GODOT-PLANE-GET-NORMAL :POINTER-VOID)
                 (GODOT-PLANE-GET-D :POINTER-VOID)
                 (GODOT-PLANE-SET-D :POINTER-VOID)
                 (GODOT-RECT2-NEW-WITH-POSITION-AND-SIZE :POINTER-VOID)
                 (GODOT-RECT2-NEW :POINTER-VOID)
                 (GODOT-RECT2-AS-STRING :POINTER-VOID)
                 (GODOT-RECT2-GET-AREA :POINTER-VOID)
                 (GODOT-RECT2-INTERSECTS :POINTER-VOID)
                 (GODOT-RECT2-ENCLOSES :POINTER-VOID)
                 (GODOT-RECT2-HAS-NO-AREA :POINTER-VOID)
                 (GODOT-RECT2-CLIP :POINTER-VOID)
                 (GODOT-RECT2-MERGE :POINTER-VOID)
                 (GODOT-RECT2-HAS-POINT :POINTER-VOID)
                 (GODOT-RECT2-GROW :POINTER-VOID)
                 (GODOT-RECT2-EXPAND :POINTER-VOID)
                 (GODOT-RECT2-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-RECT2-GET-POSITION :POINTER-VOID)
                 (GODOT-RECT2-GET-SIZE :POINTER-VOID)
                 (GODOT-RECT2-SET-POSITION :POINTER-VOID)
                 (GODOT-RECT2-SET-SIZE :POINTER-VOID)
                 (GODOT-AABB-NEW :POINTER-VOID)
                 (GODOT-AABB-GET-POSITION :POINTER-VOID)
                 (GODOT-AABB-SET-POSITION :POINTER-VOID)
                 (GODOT-AABB-GET-SIZE :POINTER-VOID)
                 (GODOT-AABB-SET-SIZE :POINTER-VOID)
                 (GODOT-AABB-AS-STRING :POINTER-VOID)
                 (GODOT-AABB-GET-AREA :POINTER-VOID)
                 (GODOT-AABB-HAS-NO-AREA :POINTER-VOID)
                 (GODOT-AABB-HAS-NO-SURFACE :POINTER-VOID)
                 (GODOT-AABB-INTERSECTS :POINTER-VOID)
                 (GODOT-AABB-ENCLOSES :POINTER-VOID)
                 (GODOT-AABB-MERGE :POINTER-VOID)
                 (GODOT-AABB-INTERSECTION :POINTER-VOID)
                 (GODOT-AABB-INTERSECTS-PLANE :POINTER-VOID)
                 (GODOT-AABB-INTERSECTS-SEGMENT :POINTER-VOID)
                 (GODOT-AABB-HAS-POINT :POINTER-VOID)
                 (GODOT-AABB-GET-SUPPORT :POINTER-VOID)
                 (GODOT-AABB-GET-LONGEST-AXIS :POINTER-VOID)
                 (GODOT-AABB-GET-LONGEST-AXIS-INDEX :POINTER-VOID)
                 (GODOT-AABB-GET-LONGEST-AXIS-SIZE :POINTER-VOID)
                 (GODOT-AABB-GET-SHORTEST-AXIS :POINTER-VOID)
                 (GODOT-AABB-GET-SHORTEST-AXIS-INDEX :POINTER-VOID)
                 (GODOT-AABB-GET-SHORTEST-AXIS-SIZE :POINTER-VOID)
                 (GODOT-AABB-EXPAND :POINTER-VOID)
                 (GODOT-AABB-GROW :POINTER-VOID)
                 (GODOT-AABB-GET-ENDPOINT :POINTER-VOID)
                 (GODOT-AABB-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-RID-NEW :POINTER-VOID)
                 (GODOT-RID-GET-ID :POINTER-VOID)
                 (GODOT-RID-NEW-WITH-RESOURCE :POINTER-VOID)
                 (GODOT-RID-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-RID-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-TRANSFORM-NEW-WITH-AXIS-ORIGIN :POINTER-VOID)
                 (GODOT-TRANSFORM-NEW :POINTER-VOID)
                 (GODOT-TRANSFORM-GET-BASIS :POINTER-VOID)
                 (GODOT-TRANSFORM-SET-BASIS :POINTER-VOID)
                 (GODOT-TRANSFORM-GET-ORIGIN :POINTER-VOID)
                 (GODOT-TRANSFORM-SET-ORIGIN :POINTER-VOID)
                 (GODOT-TRANSFORM-AS-STRING :POINTER-VOID)
                 (GODOT-TRANSFORM-INVERSE :POINTER-VOID)
                 (GODOT-TRANSFORM-AFFINE-INVERSE :POINTER-VOID)
                 (GODOT-TRANSFORM-ORTHONORMALIZED :POINTER-VOID)
                 (GODOT-TRANSFORM-ROTATED :POINTER-VOID)
                 (GODOT-TRANSFORM-SCALED :POINTER-VOID)
                 (GODOT-TRANSFORM-TRANSLATED :POINTER-VOID)
                 (GODOT-TRANSFORM-LOOKING-AT :POINTER-VOID)
                 (GODOT-TRANSFORM-XFORM-PLANE :POINTER-VOID)
                 (GODOT-TRANSFORM-XFORM-INV-PLANE :POINTER-VOID)
                 (GODOT-TRANSFORM-NEW-IDENTITY :POINTER-VOID)
                 (GODOT-TRANSFORM-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-TRANSFORM-OPERATOR-MULTIPLY :POINTER-VOID)
                 (GODOT-TRANSFORM-XFORM-VECTOR3 :POINTER-VOID)
                 (GODOT-TRANSFORM-XFORM-INV-VECTOR3 :POINTER-VOID)
                 (GODOT-TRANSFORM-XFORM-AABB :POINTER-VOID)
                 (GODOT-TRANSFORM-XFORM-INV-AABB :POINTER-VOID)
                 (GODOT-TRANSFORM2D-NEW :POINTER-VOID)
                 (GODOT-TRANSFORM2D-NEW-AXIS-ORIGIN :POINTER-VOID)
                 (GODOT-TRANSFORM2D-AS-STRING :POINTER-VOID)
                 (GODOT-TRANSFORM2D-INVERSE :POINTER-VOID)
                 (GODOT-TRANSFORM2D-AFFINE-INVERSE :POINTER-VOID)
                 (GODOT-TRANSFORM2D-GET-ROTATION :POINTER-VOID)
                 (GODOT-TRANSFORM2D-GET-ORIGIN :POINTER-VOID)
                 (GODOT-TRANSFORM2D-GET-SCALE :POINTER-VOID)
                 (GODOT-TRANSFORM2D-ORTHONORMALIZED :POINTER-VOID)
                 (GODOT-TRANSFORM2D-ROTATED :POINTER-VOID)
                 (GODOT-TRANSFORM2D-SCALED :POINTER-VOID)
                 (GODOT-TRANSFORM2D-TRANSLATED :POINTER-VOID)
                 (GODOT-TRANSFORM2D-XFORM-VECTOR2 :POINTER-VOID)
                 (GODOT-TRANSFORM2D-XFORM-INV-VECTOR2 :POINTER-VOID)
                 (GODOT-TRANSFORM2D-BASIS-XFORM-VECTOR2 :POINTER-VOID)
                 (GODOT-TRANSFORM2D-BASIS-XFORM-INV-VECTOR2 :POINTER-VOID)
                 (GODOT-TRANSFORM2D-INTERPOLATE-WITH :POINTER-VOID)
                 (GODOT-TRANSFORM2D-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-TRANSFORM2D-OPERATOR-MULTIPLY :POINTER-VOID)
                 (GODOT-TRANSFORM2D-NEW-IDENTITY :POINTER-VOID)
                 (GODOT-TRANSFORM2D-XFORM-RECT2 :POINTER-VOID)
                 (GODOT-TRANSFORM2D-XFORM-INV-RECT2 :POINTER-VOID)
                 (GODOT-VARIANT-GET-TYPE :POINTER-VOID)
                 (GODOT-VARIANT-NEW-COPY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-NIL :POINTER-VOID)
                 (GODOT-VARIANT-NEW-BOOL :POINTER-VOID)
                 (GODOT-VARIANT-NEW-UINT :POINTER-VOID)
                 (GODOT-VARIANT-NEW-INT :POINTER-VOID)
                 (GODOT-VARIANT-NEW-REAL :POINTER-VOID)
                 (GODOT-VARIANT-NEW-STRING :POINTER-VOID)
                 (GODOT-VARIANT-NEW-VECTOR2 :POINTER-VOID)
                 (GODOT-VARIANT-NEW-RECT2 :POINTER-VOID)
                 (GODOT-VARIANT-NEW-VECTOR3 :POINTER-VOID)
                 (GODOT-VARIANT-NEW-TRANSFORM2D :POINTER-VOID)
                 (GODOT-VARIANT-NEW-PLANE :POINTER-VOID)
                 (GODOT-VARIANT-NEW-QUAT :POINTER-VOID)
                 (GODOT-VARIANT-NEW-AABB :POINTER-VOID)
                 (GODOT-VARIANT-NEW-BASIS :POINTER-VOID)
                 (GODOT-VARIANT-NEW-TRANSFORM :POINTER-VOID)
                 (GODOT-VARIANT-NEW-COLOR :POINTER-VOID)
                 (GODOT-VARIANT-NEW-NODE-PATH :POINTER-VOID)
                 (GODOT-VARIANT-NEW-RID :POINTER-VOID)
                 (GODOT-VARIANT-NEW-OBJECT :POINTER-VOID)
                 (GODOT-VARIANT-NEW-DICTIONARY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-BYTE-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-INT-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-REAL-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-STRING-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-VECTOR2-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-VECTOR3-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-NEW-POOL-COLOR-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-BOOL :POINTER-VOID)
                 (GODOT-VARIANT-AS-UINT :POINTER-VOID)
                 (GODOT-VARIANT-AS-INT :POINTER-VOID)
                 (GODOT-VARIANT-AS-REAL :POINTER-VOID)
                 (GODOT-VARIANT-AS-STRING :POINTER-VOID)
                 (GODOT-VARIANT-AS-VECTOR2 :POINTER-VOID)
                 (GODOT-VARIANT-AS-RECT2 :POINTER-VOID)
                 (GODOT-VARIANT-AS-VECTOR3 :POINTER-VOID)
                 (GODOT-VARIANT-AS-TRANSFORM2D :POINTER-VOID)
                 (GODOT-VARIANT-AS-PLANE :POINTER-VOID)
                 (GODOT-VARIANT-AS-QUAT :POINTER-VOID)
                 (GODOT-VARIANT-AS-AABB :POINTER-VOID)
                 (GODOT-VARIANT-AS-BASIS :POINTER-VOID)
                 (GODOT-VARIANT-AS-TRANSFORM :POINTER-VOID)
                 (GODOT-VARIANT-AS-COLOR :POINTER-VOID)
                 (GODOT-VARIANT-AS-NODE-PATH :POINTER-VOID)
                 (GODOT-VARIANT-AS-RID :POINTER-VOID)
                 (GODOT-VARIANT-AS-OBJECT :POINTER-VOID)
                 (GODOT-VARIANT-AS-DICTIONARY :POINTER-VOID)
                 (GODOT-VARIANT-AS-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-BYTE-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-INT-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-REAL-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-STRING-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-VECTOR2-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-VECTOR3-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-AS-POOL-COLOR-ARRAY :POINTER-VOID)
                 (GODOT-VARIANT-CALL :POINTER-VOID)
                 (GODOT-VARIANT-HAS-METHOD :POINTER-VOID)
                 (GODOT-VARIANT-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-VARIANT-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-VARIANT-HASH-COMPARE :POINTER-VOID)
                 (GODOT-VARIANT-BOOLEANIZE :POINTER-VOID)
                 (GODOT-VARIANT-DESTROY :POINTER-VOID)
                 (GODOT-CHAR-STRING-LENGTH :POINTER-VOID)
                 (GODOT-CHAR-STRING-GET-DATA :POINTER-VOID)
                 (GODOT-CHAR-STRING-DESTROY :POINTER-VOID)
                 (GODOT-STRING-NEW :POINTER-VOID)
                 (GODOT-STRING-NEW-COPY :POINTER-VOID)
                 (GODOT-STRING-NEW-WITH-WIDE-STRING :POINTER-VOID)
                 (GODOT-STRING-OPERATOR-INDEX :POINTER-VOID)
                 (GODOT-STRING-OPERATOR-INDEX-CONST :POINTER-VOID)
                 (GODOT-STRING-WIDE-STR :POINTER-VOID)
                 (GODOT-STRING-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-STRING-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-STRING-OPERATOR-PLUS :POINTER-VOID)
                 (GODOT-STRING-LENGTH :POINTER-VOID)
                 (GODOT-STRING-CASECMP-TO :POINTER-VOID)
                 (GODOT-STRING-NOCASECMP-TO :POINTER-VOID)
                 (GODOT-STRING-NATURALNOCASECMP-TO :POINTER-VOID)
                 (GODOT-STRING-BEGINS-WITH :POINTER-VOID)
                 (GODOT-STRING-BEGINS-WITH-CHAR-ARRAY :POINTER-VOID)
                 (GODOT-STRING-BIGRAMS :POINTER-VOID)
                 (GODOT-STRING-CHR :POINTER-VOID)
                 (GODOT-STRING-ENDS-WITH :POINTER-VOID)
                 (GODOT-STRING-FIND :POINTER-VOID)
                 (GODOT-STRING-FIND-FROM :POINTER-VOID)
                 (GODOT-STRING-FINDMK :POINTER-VOID)
                 (GODOT-STRING-FINDMK-FROM :POINTER-VOID)
                 (GODOT-STRING-FINDMK-FROM-IN-PLACE :POINTER-VOID)
                 (GODOT-STRING-FINDN :POINTER-VOID)
                 (GODOT-STRING-FINDN-FROM :POINTER-VOID)
                 (GODOT-STRING-FIND-LAST :POINTER-VOID)
                 (GODOT-STRING-FORMAT :POINTER-VOID)
                 (GODOT-STRING-FORMAT-WITH-CUSTOM-PLACEHOLDER :POINTER-VOID)
                 (GODOT-STRING-HEX-ENCODE-BUFFER :POINTER-VOID)
                 (GODOT-STRING-HEX-TO-INT :POINTER-VOID)
                 (GODOT-STRING-HEX-TO-INT-WITHOUT-PREFIX :POINTER-VOID)
                 (GODOT-STRING-INSERT :POINTER-VOID)
                 (GODOT-STRING-IS-NUMERIC :POINTER-VOID)
                 (GODOT-STRING-IS-SUBSEQUENCE-OF :POINTER-VOID)
                 (GODOT-STRING-IS-SUBSEQUENCE-OFI :POINTER-VOID)
                 (GODOT-STRING-LPAD :POINTER-VOID)
                 (GODOT-STRING-LPAD-WITH-CUSTOM-CHARACTER :POINTER-VOID)
                 (GODOT-STRING-MATCH :POINTER-VOID)
                 (GODOT-STRING-MATCHN :POINTER-VOID)
                 (GODOT-STRING-MD5 :POINTER-VOID)
                 (GODOT-STRING-NUM :POINTER-VOID)
                 (GODOT-STRING-NUM-INT64 :POINTER-VOID)
                 (GODOT-STRING-NUM-INT64-CAPITALIZED :POINTER-VOID)
                 (GODOT-STRING-NUM-REAL :POINTER-VOID)
                 (GODOT-STRING-NUM-SCIENTIFIC :POINTER-VOID)
                 (GODOT-STRING-NUM-WITH-DECIMALS :POINTER-VOID)
                 (GODOT-STRING-PAD-DECIMALS :POINTER-VOID)
                 (GODOT-STRING-PAD-ZEROS :POINTER-VOID)
                 (GODOT-STRING-REPLACE-FIRST :POINTER-VOID)
                 (GODOT-STRING-REPLACE :POINTER-VOID)
                 (GODOT-STRING-REPLACEN :POINTER-VOID)
                 (GODOT-STRING-RFIND :POINTER-VOID)
                 (GODOT-STRING-RFINDN :POINTER-VOID)
                 (GODOT-STRING-RFIND-FROM :POINTER-VOID)
                 (GODOT-STRING-RFINDN-FROM :POINTER-VOID)
                 (GODOT-STRING-RPAD :POINTER-VOID)
                 (GODOT-STRING-RPAD-WITH-CUSTOM-CHARACTER :POINTER-VOID)
                 (GODOT-STRING-SIMILARITY :POINTER-VOID)
                 (GODOT-STRING-SPRINTF :POINTER-VOID)
                 (GODOT-STRING-SUBSTR :POINTER-VOID)
                 (GODOT-STRING-TO-DOUBLE :POINTER-VOID)
                 (GODOT-STRING-TO-FLOAT :POINTER-VOID)
                 (GODOT-STRING-TO-INT :POINTER-VOID)
                 (GODOT-STRING-CAMELCASE-TO-UNDERSCORE :POINTER-VOID)
                 (GODOT-STRING-CAMELCASE-TO-UNDERSCORE-LOWERCASED
                  :POINTER-VOID)
                 (GODOT-STRING-CAPITALIZE :POINTER-VOID)
                 (GODOT-STRING-CHAR-TO-DOUBLE :POINTER-VOID)
                 (GODOT-STRING-CHAR-TO-INT :POINTER-VOID)
                 (GODOT-STRING-WCHAR-TO-INT :POINTER-VOID)
                 (GODOT-STRING-CHAR-TO-INT-WITH-LEN :POINTER-VOID)
                 (GODOT-STRING-CHAR-TO-INT64-WITH-LEN :POINTER-VOID)
                 (GODOT-STRING-HEX-TO-INT64 :POINTER-VOID)
                 (GODOT-STRING-HEX-TO-INT64-WITH-PREFIX :POINTER-VOID)
                 (GODOT-STRING-TO-INT64 :POINTER-VOID)
                 (GODOT-STRING-UNICODE-CHAR-TO-DOUBLE :POINTER-VOID)
                 (GODOT-STRING-GET-SLICE-COUNT :POINTER-VOID)
                 (GODOT-STRING-GET-SLICE :POINTER-VOID)
                 (GODOT-STRING-GET-SLICEC :POINTER-VOID)
                 (GODOT-STRING-SPLIT :POINTER-VOID)
                 (GODOT-STRING-SPLIT-ALLOW-EMPTY :POINTER-VOID)
                 (GODOT-STRING-SPLIT-FLOATS :POINTER-VOID)
                 (GODOT-STRING-SPLIT-FLOATS-ALLOWS-EMPTY :POINTER-VOID)
                 (GODOT-STRING-SPLIT-FLOATS-MK :POINTER-VOID)
                 (GODOT-STRING-SPLIT-FLOATS-MK-ALLOWS-EMPTY :POINTER-VOID)
                 (GODOT-STRING-SPLIT-INTS :POINTER-VOID)
                 (GODOT-STRING-SPLIT-INTS-ALLOWS-EMPTY :POINTER-VOID)
                 (GODOT-STRING-SPLIT-INTS-MK :POINTER-VOID)
                 (GODOT-STRING-SPLIT-INTS-MK-ALLOWS-EMPTY :POINTER-VOID)
                 (GODOT-STRING-SPLIT-SPACES :POINTER-VOID)
                 (GODOT-STRING-CHAR-LOWERCASE :POINTER-VOID)
                 (GODOT-STRING-CHAR-UPPERCASE :POINTER-VOID)
                 (GODOT-STRING-TO-LOWER :POINTER-VOID)
                 (GODOT-STRING-TO-UPPER :POINTER-VOID)
                 (GODOT-STRING-GET-BASENAME :POINTER-VOID)
                 (GODOT-STRING-GET-EXTENSION :POINTER-VOID)
                 (GODOT-STRING-LEFT :POINTER-VOID)
                 (GODOT-STRING-ORD-AT :POINTER-VOID)
                 (GODOT-STRING-PLUS-FILE :POINTER-VOID)
                 (GODOT-STRING-RIGHT :POINTER-VOID)
                 (GODOT-STRING-STRIP-EDGES :POINTER-VOID)
                 (GODOT-STRING-STRIP-ESCAPES :POINTER-VOID)
                 (GODOT-STRING-ERASE :POINTER-VOID)
                 (GODOT-STRING-ASCII :POINTER-VOID)
                 (GODOT-STRING-ASCII-EXTENDED :POINTER-VOID)
                 (GODOT-STRING-UTF8 :POINTER-VOID)
                 (GODOT-STRING-PARSE-UTF8 :POINTER-VOID)
                 (GODOT-STRING-PARSE-UTF8-WITH-LEN :POINTER-VOID)
                 (GODOT-STRING-CHARS-TO-UTF8 :POINTER-VOID)
                 (GODOT-STRING-CHARS-TO-UTF8-WITH-LEN :POINTER-VOID)
                 (GODOT-STRING-HASH :POINTER-VOID)
                 (GODOT-STRING-HASH64 :POINTER-VOID)
                 (GODOT-STRING-HASH-CHARS :POINTER-VOID)
                 (GODOT-STRING-HASH-CHARS-WITH-LEN :POINTER-VOID)
                 (GODOT-STRING-HASH-UTF8-CHARS :POINTER-VOID)
                 (GODOT-STRING-HASH-UTF8-CHARS-WITH-LEN :POINTER-VOID)
                 (GODOT-STRING-MD5-BUFFER :POINTER-VOID)
                 (GODOT-STRING-MD5-TEXT :POINTER-VOID)
                 (GODOT-STRING-SHA256-BUFFER :POINTER-VOID)
                 (GODOT-STRING-SHA256-TEXT :POINTER-VOID)
                 (GODOT-STRING-EMPTY :POINTER-VOID)
                 (GODOT-STRING-GET-BASE-DIR :POINTER-VOID)
                 (GODOT-STRING-GET-FILE :POINTER-VOID)
                 (GODOT-STRING-HUMANIZE-SIZE :POINTER-VOID)
                 (GODOT-STRING-IS-ABS-PATH :POINTER-VOID)
                 (GODOT-STRING-IS-REL-PATH :POINTER-VOID)
                 (GODOT-STRING-IS-RESOURCE-FILE :POINTER-VOID)
                 (GODOT-STRING-PATH-TO :POINTER-VOID)
                 (GODOT-STRING-PATH-TO-FILE :POINTER-VOID)
                 (GODOT-STRING-SIMPLIFY-PATH :POINTER-VOID)
                 (GODOT-STRING-C-ESCAPE :POINTER-VOID)
                 (GODOT-STRING-C-ESCAPE-MULTILINE :POINTER-VOID)
                 (GODOT-STRING-C-UNESCAPE :POINTER-VOID)
                 (GODOT-STRING-HTTP-ESCAPE :POINTER-VOID)
                 (GODOT-STRING-HTTP-UNESCAPE :POINTER-VOID)
                 (GODOT-STRING-JSON-ESCAPE :POINTER-VOID)
                 (GODOT-STRING-WORD-WRAP :POINTER-VOID)
                 (GODOT-STRING-XML-ESCAPE :POINTER-VOID)
                 (GODOT-STRING-XML-ESCAPE-WITH-QUOTES :POINTER-VOID)
                 (GODOT-STRING-XML-UNESCAPE :POINTER-VOID)
                 (GODOT-STRING-PERCENT-DECODE :POINTER-VOID)
                 (GODOT-STRING-PERCENT-ENCODE :POINTER-VOID)
                 (GODOT-STRING-IS-VALID-FLOAT :POINTER-VOID)
                 (GODOT-STRING-IS-VALID-HEX-NUMBER :POINTER-VOID)
                 (GODOT-STRING-IS-VALID-HTML-COLOR :POINTER-VOID)
                 (GODOT-STRING-IS-VALID-IDENTIFIER :POINTER-VOID)
                 (GODOT-STRING-IS-VALID-INTEGER :POINTER-VOID)
                 (GODOT-STRING-IS-VALID-IP-ADDRESS :POINTER-VOID)
                 (GODOT-STRING-DESTROY :POINTER-VOID)
                 (GODOT-STRING-NAME-NEW :POINTER-VOID)
                 (GODOT-STRING-NAME-NEW-DATA :POINTER-VOID)
                 (GODOT-STRING-NAME-GET-NAME :POINTER-VOID)
                 (GODOT-STRING-NAME-GET-HASH :POINTER-VOID)
                 (GODOT-STRING-NAME-GET-DATA-UNIQUE-POINTER :POINTER-VOID)
                 (GODOT-STRING-NAME-OPERATOR-EQUAL :POINTER-VOID)
                 (GODOT-STRING-NAME-OPERATOR-LESS :POINTER-VOID)
                 (GODOT-STRING-NAME-DESTROY :POINTER-VOID)
                 (GODOT-OBJECT-DESTROY :POINTER-VOID)
                 (GODOT-GLOBAL-GET-SINGLETON :POINTER-VOID)
                 (GODOT-METHOD-BIND-GET-METHOD :POINTER-VOID)
                 (GODOT-METHOD-BIND-PTRCALL :POINTER-VOID)
                 (GODOT-METHOD-BIND-CALL :POINTER-VOID)
                 (GODOT-GET-CLASS-CONSTRUCTOR :POINTER-VOID)
                 (GODOT-GET-GLOBAL-CONSTANTS :POINTER-VOID)
                 (GODOT-REGISTER-NATIVE-CALL-TYPE :POINTER-VOID)
                 (GODOT-ALLOC :POINTER-VOID)
                 (GODOT-REALLOC :POINTER-VOID)
                 (GODOT-FREE :POINTER-VOID)
                 (GODOT-PRINT-ERROR :POINTER-VOID)
                 (GODOT-PRINT-WARNING :POINTER-VOID)
                 (GODOT-PRINT :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-CORE-1.1-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-COLOR-TO-ABGR32 :POINTER-VOID)
                 (GODOT-COLOR-TO-ABGR64 :POINTER-VOID)
                 (GODOT-COLOR-TO-ARGB64 :POINTER-VOID)
                 (GODOT-COLOR-TO-RGBA64 :POINTER-VOID)
                 (GODOT-COLOR-DARKENED :POINTER-VOID)
                 (GODOT-COLOR-FROM-HSV :POINTER-VOID)
                 (GODOT-COLOR-LIGHTENED :POINTER-VOID)
                 (GODOT-ARRAY-DUPLICATE :POINTER-VOID)
                 (GODOT-ARRAY-MAX :POINTER-VOID)
                 (GODOT-ARRAY-MIN :POINTER-VOID)
                 (GODOT-ARRAY-SHUFFLE :POINTER-VOID)
                 (GODOT-BASIS-SLERP :POINTER-VOID)
                 (GODOT-DICTIONARY-GET-WITH-DEFAULT :POINTER-VOID)
                 (GODOT-DICTIONARY-ERASE-WITH-RETURN :POINTER-VOID)
                 (GODOT-NODE-PATH-GET-AS-PROPERTY-PATH :POINTER-VOID)
                 (GODOT-QUAT-SET-AXIS-ANGLE :POINTER-VOID)
                 (GODOT-RECT2-GROW-INDIVIDUAL :POINTER-VOID)
                 (GODOT-RECT2-GROW-MARGIN :POINTER-VOID)
                 (GODOT-RECT2-ABS :POINTER-VOID)
                 (GODOT-STRING-DEDENT :POINTER-VOID)
                 (GODOT-STRING-TRIM-PREFIX :POINTER-VOID)
                 (GODOT-STRING-TRIM-SUFFIX :POINTER-VOID)
                 (GODOT-STRING-RSTRIP :POINTER-VOID)
                 (GODOT-STRING-RSPLIT :POINTER-VOID)
                 (GODOT-BASIS-GET-QUAT :POINTER-VOID)
                 (GODOT-BASIS-SET-QUAT :POINTER-VOID)
                 (GODOT-BASIS-SET-AXIS-ANGLE-SCALE :POINTER-VOID)
                 (GODOT-BASIS-SET-EULER-SCALE :POINTER-VOID)
                 (GODOT-BASIS-SET-QUAT-SCALE :POINTER-VOID)
                 (GODOT-IS-INSTANCE-VALID :POINTER-VOID)
                 (GODOT-QUAT-NEW-WITH-BASIS :POINTER-VOID)
                 (GODOT-QUAT-NEW-WITH-EULER :POINTER-VOID)
                 (GODOT-TRANSFORM-NEW-WITH-QUAT :POINTER-VOID)
                 (GODOT-VARIANT-GET-OPERATOR-NAME :POINTER-VOID)
                 (GODOT-VARIANT-EVALUATE :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-CORE-1.2-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-DICTIONARY-DUPLICATE :POINTER-VOID)
                 (GODOT-VECTOR3-MOVE-TOWARD :POINTER-VOID)
                 (GODOT-VECTOR2-MOVE-TOWARD :POINTER-VOID)
                 (GODOT-STRING-COUNT :POINTER-VOID)
                 (GODOT-STRING-COUNTN :POINTER-VOID)
                 (GODOT-VECTOR3-DIRECTION-TO :POINTER-VOID)
                 (GODOT-VECTOR2-DIRECTION-TO :POINTER-VOID)
                 (GODOT-ARRAY-SLICE :POINTER-VOID)
                 (GODOT-POOL-BYTE-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-POOL-INT-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-POOL-REAL-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-POOL-STRING-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-POOL-VECTOR2-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-POOL-VECTOR3-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-POOL-COLOR-ARRAY-EMPTY :POINTER-VOID)
                 (GODOT-GET-CLASS-TAG :POINTER-VOID)
                 (GODOT-OBJECT-CAST-TO :POINTER-VOID)
                 (GODOT-INSTANCE-FROM-ID :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-NATIVESCRIPT-1.0-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-NATIVESCRIPT-REGISTER-CLASS :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-REGISTER-TOOL-CLASS :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-REGISTER-METHOD :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-REGISTER-PROPERTY :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-REGISTER-SIGNAL :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-GET-USERDATA :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-CORE-1.1-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-NATIVESCRIPT-SET-METHOD-ARGUMENT-INFORMATION
                  :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-SET-CLASS-DOCUMENTATION :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-SET-METHOD-DOCUMENTATION :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-SET-PROPERTY-DOCUMENTATION :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-SET-SIGNAL-DOCUMENTATION :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-SET-GLOBAL-TYPE-TAG :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-GET-GLOBAL-TYPE-TAG :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-SET-TYPE-TAG :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-GET-TYPE-TAG :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-REGISTER-INSTANCE-BINDING-DATA-FUNCTIONS
                  :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-UNREGISTER-INSTANCE-BINDING-DATA-FUNCTIONS
                  :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-GET-INSTANCE-BINDING-DATA :POINTER-VOID)
                 (GODOT-NATIVESCRIPT-PROFILING-ADD-DATA :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-PLUGINSCRIPT-1.0-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-PLUGINSCRIPT-REGISTER-LANGUAGE :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-ANDROID-1.1-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-ANDROID-GET-ENV :POINTER-VOID)
                 (GODOT-ANDROID-GET-ACTIVITY :POINTER-VOID)
                 (GODOT-ANDROID-GET-SURFACE :POINTER-VOID)
                 (GODOT-ANDROID-IS-ACTIVITY-RESUMED :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-ARVR-1.1-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-ARVR-REGISTER-INTERFACE :POINTER-VOID)
                 (GODOT-ARVR-GET-WORLDSCALE :POINTER-VOID)
                 (GODOT-ARVR-GET-REFERENCE-FRAME :POINTER-VOID)
                 (GODOT-ARVR-BLIT :POINTER-VOID)
                 (GODOT-ARVR-GET-TEXID :POINTER-VOID)
                 (GODOT-ARVR-ADD-CONTROLLER :POINTER-VOID)
                 (GODOT-ARVR-REMOVE-CONTROLLER :POINTER-VOID)
                 (GODOT-ARVR-SET-CONTROLLER-TRANSFORM :POINTER-VOID)
                 (GODOT-ARVR-SET-CONTROLLER-BUTTON :POINTER-VOID)
                 (GODOT-ARVR-SET-CONTROLLER-AXIS :POINTER-VOID)
                 (GODOT-ARVR-GET-CONTROLLER-RUMBLE :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-VIDEODECODER-0.1-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-VIDEODECODER-FILE-READ :POINTER-VOID)
                 (GODOT-VIDEODECODER-FILE-SEEK :POINTER-VOID)
                 (GODOT-VIDEODECODER-REGISTER-DECODER :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-NET-3.1-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-NET-BIND-STREAM-PEER :POINTER-VOID)
                 (GODOT-NET-BIND-PACKET-PEER :POINTER-VOID)
                 (GODOT-NET-BIND-MULTIPLAYER-PEER :POINTER-VOID))
 (FFI:DEF-STRUCT GODOT-GDNATIVE-CORE-3.2-STRUCT
                 (TYPE :UNSIGNED-INT)
                 (VERSION 'GODOT-GDNATIVE-VERSION)
                 (NEXT (* 'GODOT-GDNATIVE-API-STRUCT))
                 (GODOT-NET-SET-WEBRTC-LIBRARY :POINTER-VOID)
                 (GODOT-NET-BIND-WEBRTC-PEER-CONNECTION :POINTER-VOID)
                 (GODOT-NET-BIND-WEBRTC-DATA-CHANNEL :POINTER-VOID))
 (FFI:CLINES "const godot_gdnative_core_api_struct* _gdcl_api_CORE_1_0;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_CORE_1_0" GODOT-GDNATIVE-CORE-1.0)
                      GODOT-GDNATIVE-CORE-1.0-STRUCT
                      :DEFAULT)
 (FFI:CLINES "const godot_gdnative_core_1_1_api_struct* _gdcl_api_CORE_1_1;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_CORE_1_1" GODOT-GDNATIVE-CORE-1.1)
                      GODOT-GDNATIVE-CORE-1.1-STRUCT
                      :DEFAULT)
 (FFI:CLINES "const godot_gdnative_core_1_2_api_struct* _gdcl_api_CORE_1_2;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_CORE_1_2" GODOT-GDNATIVE-CORE-1.2)
                      GODOT-GDNATIVE-CORE-1.2-STRUCT
                      :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_nativescript_api_struct* _gdcl_api_nativescript_1_0;")
 (FFI:DEF-FOREIGN-VAR
  ("_gdcl_api_nativescript_1_0" GODOT-GDNATIVE-NATIVESCRIPT-1.0)
  GODOT-GDNATIVE-NATIVESCRIPT-1.0-STRUCT
  :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_CORE_1_1_api_struct* _gdcl_api_CORE_1_1;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_CORE_1_1" GODOT-GDNATIVE-CORE-1.1)
                      GODOT-GDNATIVE-CORE-1.1-STRUCT
                      :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_pluginscript_api_struct* _gdcl_api_pluginscript_1_0;")
 (FFI:DEF-FOREIGN-VAR
  ("_gdcl_api_pluginscript_1_0" GODOT-GDNATIVE-PLUGINSCRIPT-1.0)
  GODOT-GDNATIVE-PLUGINSCRIPT-1.0-STRUCT
  :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_android_1_1_api_struct* _gdcl_api_android_1_1;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_android_1_1" GODOT-GDNATIVE-ANDROID-1.1)
                      GODOT-GDNATIVE-ANDROID-1.1-STRUCT
                      :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_arvr_1_1_api_struct* _gdcl_api_arvr_1_1;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_arvr_1_1" GODOT-GDNATIVE-ARVR-1.1)
                      GODOT-GDNATIVE-ARVR-1.1-STRUCT
                      :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_videodecoder_0_1_api_struct* _gdcl_api_videodecoder_0_1;")
 (FFI:DEF-FOREIGN-VAR
  ("_gdcl_api_videodecoder_0_1" GODOT-GDNATIVE-VIDEODECODER-0.1)
  GODOT-GDNATIVE-VIDEODECODER-0.1-STRUCT
  :DEFAULT)
 (FFI:CLINES "const godot_gdnative_ext_net_3_1_api_struct* _gdcl_api_net_3_1;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_net_3_1" GODOT-GDNATIVE-NET-3.1)
                      GODOT-GDNATIVE-NET-3.1-STRUCT
                      :DEFAULT)
 (FFI:CLINES
  "const godot_gdnative_ext_CORE_3_2_api_struct* _gdcl_api_CORE_3_2;")
 (FFI:DEF-FOREIGN-VAR ("_gdcl_api_CORE_3_2" GODOT-GDNATIVE-CORE-3.2)
                      GODOT-GDNATIVE-CORE-3.2-STRUCT
                      :DEFAULT)
 (FFI:DEFCBODY GODOT-PRINT
               ((* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_print(#0)")
 (FFI:DEFCBODY GODOT-PRINT-WARNING
               (:CSTRING :CSTRING :CSTRING :INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_print_warning(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-PRINT-ERROR
               (:CSTRING :CSTRING :CSTRING :INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_print_error(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-FREE
               (:POINTER-VOID)
               :VOID
               "_gdcl_api_CORE_1_0->godot_free(#0)")
 (FFI:DEFCBODY GODOT-REALLOC
               (:POINTER-VOID :INT)
               :POINTER-VOID
               "_gdcl_api_CORE_1_0->godot_realloc(#0, #1)")
 (FFI:DEFCBODY GODOT-ALLOC
               (:INT)
               :POINTER-VOID
               "_gdcl_api_CORE_1_0->godot_alloc(#0)")
 (FFI:DEFCBODY GODOT-REGISTER-NATIVE-CALL-TYPE
               (:CSTRING 'NATIVE-CALL-CB)
               :VOID
               "_gdcl_api_CORE_1_0->godot_register_native_call_type(#0, #1)")
 (FFI:DEFCBODY GODOT-GET-GLOBAL-CONSTANTS
               NIL
               'GODOT-DICTIONARY
               "_gdcl_api_CORE_1_0->godot_get_global_constants()")
 (FFI:DEFCBODY GODOT-GET-CLASS-CONSTRUCTOR
               (:CSTRING)
               'GODOT-CLASS-CONSTRUCTOR
               "_gdcl_api_CORE_1_0->godot_get_class_constructor(#0)")
 (FFI:DEFCBODY GODOT-METHOD-BIND-CALL
               ((* 'GODOT-METHOD-BIND) (* 'GODOT-OBJECT) (* (* 'GODOT-VARIANT))
                :INT (* 'GODOT-VARIANT-CALL-ERROR))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_method_bind_call(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-METHOD-BIND-PTRCALL
               ((* 'GODOT-METHOD-BIND) (* 'GODOT-OBJECT) (* (* :VOID))
                :POINTER-VOID)
               :VOID
               "_gdcl_api_CORE_1_0->godot_method_bind_ptrcall(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-METHOD-BIND-GET-METHOD
               (:CSTRING :CSTRING)
               (* 'GODOT-METHOD-BIND)
               "_gdcl_api_CORE_1_0->godot_method_bind_get_method(#0, #1)")
 (FFI:DEFCBODY GODOT-GLOBAL-GET-SINGLETON
               (:CSTRING)
               (* 'GODOT-OBJECT)
               "_gdcl_api_CORE_1_0->godot_global_get_singleton(#0)")
 (FFI:DEFCBODY GODOT-OBJECT-DESTROY
               ((* 'GODOT-OBJECT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_object_destroy(#0)")
 (FFI:DEFCBODY GODOT-STRING-NAME-DESTROY
               ((* 'GODOT-STRING-NAME))
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_name_destroy(#0)")
 (FFI:DEFCBODY GODOT-STRING-NAME-OPERATOR-LESS
               ((* 'GODOT-STRING-NAME) (* 'GODOT-STRING-NAME))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_name_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NAME-OPERATOR-EQUAL
               ((* 'GODOT-STRING-NAME) (* 'GODOT-STRING-NAME))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_name_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NAME-GET-DATA-UNIQUE-POINTER
               ((* 'GODOT-STRING-NAME))
               :POINTER-VOID
               "_gdcl_api_CORE_1_0->godot_string_name_get_data_unique_pointer(#0)")
 (FFI:DEFCBODY GODOT-STRING-NAME-GET-HASH
               ((* 'GODOT-STRING-NAME))
               'UINT32-T
               "_gdcl_api_CORE_1_0->godot_string_name_get_hash(#0)")
 (FFI:DEFCBODY GODOT-STRING-NAME-GET-NAME
               ((* 'GODOT-STRING-NAME))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_name_get_name(#0)")
 (FFI:DEFCBODY GODOT-STRING-NAME-NEW-DATA
               ((* 'GODOT-STRING-NAME) :CSTRING)
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_name_new_data(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NAME-NEW
               ((* 'GODOT-STRING-NAME) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_name_new(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-DESTROY
               ((* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_destroy(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-VALID-IP-ADDRESS
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_valid_ip_address(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-VALID-INTEGER
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_valid_integer(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-VALID-IDENTIFIER
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_valid_identifier(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-VALID-HTML-COLOR
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_valid_html_color(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-VALID-HEX-NUMBER
               ((* 'GODOT-STRING) 'GODOT-BOOL)
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_valid_hex_number(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-IS-VALID-FLOAT
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_valid_float(#0)")
 (FFI:DEFCBODY GODOT-STRING-PERCENT-ENCODE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_percent_encode(#0)")
 (FFI:DEFCBODY GODOT-STRING-PERCENT-DECODE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_percent_decode(#0)")
 (FFI:DEFCBODY GODOT-STRING-XML-UNESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_xml_unescape(#0)")
 (FFI:DEFCBODY GODOT-STRING-XML-ESCAPE-WITH-QUOTES
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_xml_escape_with_quotes(#0)")
 (FFI:DEFCBODY GODOT-STRING-XML-ESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_xml_escape(#0)")
 (FFI:DEFCBODY GODOT-STRING-WORD-WRAP
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_word_wrap(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-JSON-ESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_json_escape(#0)")
 (FFI:DEFCBODY GODOT-STRING-HTTP-UNESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_http_unescape(#0)")
 (FFI:DEFCBODY GODOT-STRING-HTTP-ESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_http_escape(#0)")
 (FFI:DEFCBODY GODOT-STRING-C-UNESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_c_unescape(#0)")
 (FFI:DEFCBODY GODOT-STRING-C-ESCAPE-MULTILINE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_c_escape_multiline(#0)")
 (FFI:DEFCBODY GODOT-STRING-C-ESCAPE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_c_escape(#0)")
 (FFI:DEFCBODY GODOT-STRING-SIMPLIFY-PATH
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_simplify_path(#0)")
 (FFI:DEFCBODY GODOT-STRING-PATH-TO-FILE
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_path_to_file(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-PATH-TO
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_path_to(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-IS-RESOURCE-FILE
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_resource_file(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-REL-PATH
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_rel_path(#0)")
 (FFI:DEFCBODY GODOT-STRING-IS-ABS-PATH
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_abs_path(#0)")
 (FFI:DEFCBODY GODOT-STRING-HUMANIZE-SIZE
               ('SIZE-T)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_humanize_size(#0)")
 (FFI:DEFCBODY GODOT-STRING-GET-FILE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_get_file(#0)")
 (FFI:DEFCBODY GODOT-STRING-GET-BASE-DIR
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_get_base_dir(#0)")
 (FFI:DEFCBODY GODOT-STRING-EMPTY
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_empty(#0)")
 (FFI:DEFCBODY GODOT-STRING-SHA256-TEXT
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_sha256_text(#0)")
 (FFI:DEFCBODY GODOT-STRING-SHA256-BUFFER
               ((* 'GODOT-STRING))
               'GODOT-POOL-BYTE-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_sha256_buffer(#0)")
 (FFI:DEFCBODY GODOT-STRING-MD5-TEXT
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_md5_text(#0)")
 (FFI:DEFCBODY GODOT-STRING-MD5-BUFFER
               ((* 'GODOT-STRING))
               'GODOT-POOL-BYTE-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_md5_buffer(#0)")
 (FFI:DEFCBODY GODOT-STRING-HASH-UTF8-CHARS-WITH-LEN
               ((* GODOT-ECL/UTILS::GODOT-CHAR-TYPE) 'GODOT-INT)
               'UINT32-T
               "_gdcl_api_CORE_1_0->godot_string_hash_utf8_chars_with_len(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-HASH-UTF8-CHARS
               ((* GODOT-ECL/UTILS::GODOT-CHAR-TYPE))
               'UINT32-T
               "_gdcl_api_CORE_1_0->godot_string_hash_utf8_chars(#0)")
 (FFI:DEFCBODY GODOT-STRING-HASH-CHARS-WITH-LEN
               (:CSTRING 'GODOT-INT)
               'UINT32-T
               "_gdcl_api_CORE_1_0->godot_string_hash_chars_with_len(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-HASH-CHARS
               (:CSTRING)
               'UINT32-T
               "_gdcl_api_CORE_1_0->godot_string_hash_chars(#0)")
 (FFI:DEFCBODY GODOT-STRING-HASH64
               ((* 'GODOT-STRING))
               :UINT64-T
               "_gdcl_api_CORE_1_0->godot_string_hash64(#0)")
 (FFI:DEFCBODY GODOT-STRING-HASH
               ((* 'GODOT-STRING))
               'UINT32-T
               "_gdcl_api_CORE_1_0->godot_string_hash(#0)")
 (FFI:DEFCBODY GODOT-STRING-CHARS-TO-UTF8-WITH-LEN
               (:CSTRING 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_chars_to_utf8_with_len(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-CHARS-TO-UTF8
               (:CSTRING)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_chars_to_utf8(#0)")
 (FFI:DEFCBODY GODOT-STRING-PARSE-UTF8-WITH-LEN
               ((* 'GODOT-STRING) :CSTRING 'GODOT-INT)
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_parse_utf8_with_len(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-PARSE-UTF8
               ((* 'GODOT-STRING) :CSTRING)
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_parse_utf8(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-UTF8
               ((* 'GODOT-STRING))
               'GODOT-CHAR-STRING
               "_gdcl_api_CORE_1_0->godot_string_utf8(#0)")
 (FFI:DEFCBODY GODOT-STRING-ASCII-EXTENDED
               ((* 'GODOT-STRING))
               'GODOT-CHAR-STRING
               "_gdcl_api_CORE_1_0->godot_string_ascii_extended(#0)")
 (FFI:DEFCBODY GODOT-STRING-ASCII
               ((* 'GODOT-STRING))
               'GODOT-CHAR-STRING
               "_gdcl_api_CORE_1_0->godot_string_ascii(#0)")
 (FFI:DEFCBODY GODOT-STRING-ERASE
               ((* 'GODOT-STRING) 'GODOT-INT 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_erase(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-STRIP-ESCAPES
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_strip_escapes(#0)")
 (FFI:DEFCBODY GODOT-STRING-STRIP-EDGES
               ((* 'GODOT-STRING) 'GODOT-BOOL 'GODOT-BOOL)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_strip_edges(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-RIGHT
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_right(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-PLUS-FILE
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_plus_file(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-ORD-AT
               ((* 'GODOT-STRING) 'GODOT-INT)
               GODOT-ECL/UTILS::GODOT-CHAR-TYPE
               "_gdcl_api_CORE_1_0->godot_string_ord_at(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-LEFT
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_left(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-GET-EXTENSION
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_get_extension(#0)")
 (FFI:DEFCBODY GODOT-STRING-GET-BASENAME
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_get_basename(#0)")
 (FFI:DEFCBODY GODOT-STRING-TO-UPPER
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_to_upper(#0)")
 (FFI:DEFCBODY GODOT-STRING-TO-LOWER
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_to_lower(#0)")
 (FFI:DEFCBODY GODOT-STRING-CHAR-UPPERCASE
               (GODOT-ECL/UTILS::GODOT-CHAR-TYPE)
               GODOT-ECL/UTILS::GODOT-CHAR-TYPE
               "_gdcl_api_CORE_1_0->godot_string_char_uppercase(#0)")
 (FFI:DEFCBODY GODOT-STRING-CHAR-LOWERCASE
               (GODOT-ECL/UTILS::GODOT-CHAR-TYPE)
               GODOT-ECL/UTILS::GODOT-CHAR-TYPE
               "_gdcl_api_CORE_1_0->godot_string_char_lowercase(#0)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-SPACES
               ((* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_spaces(#0)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-INTS-MK-ALLOWS-EMPTY
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_ints_mk_allows_empty(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-INTS-MK
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_ints_mk(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-INTS-ALLOWS-EMPTY
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_ints_allows_empty(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-INTS
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_ints(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-FLOATS-MK-ALLOWS-EMPTY
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_floats_mk_allows_empty(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-FLOATS-MK
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_floats_mk(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-FLOATS-ALLOWS-EMPTY
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_floats_allows_empty(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-FLOATS
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_floats(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT-ALLOW-EMPTY
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split_allow_empty(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-SPLIT
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_split(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-GET-SLICEC
               ((* 'GODOT-STRING) GODOT-ECL/UTILS::GODOT-CHAR-TYPE 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_get_slicec(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-GET-SLICE
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_get_slice(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-GET-SLICE-COUNT
               ((* 'GODOT-STRING) 'GODOT-STRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_get_slice_count(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-UNICODE-CHAR-TO-DOUBLE
               ((* GODOT-ECL/UTILS::GODOT-CHAR-TYPE)
                (* (* GODOT-ECL/UTILS::GODOT-CHAR-TYPE)))
               :DOUBLE
               "_gdcl_api_CORE_1_0->godot_string_unicode_char_to_double(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-TO-INT64
               ((* 'GODOT-STRING))
               :INT64-T
               "_gdcl_api_CORE_1_0->godot_string_to_int64(#0)")
 (FFI:DEFCBODY GODOT-STRING-HEX-TO-INT64-WITH-PREFIX
               ((* 'GODOT-STRING))
               :INT64-T
               "_gdcl_api_CORE_1_0->godot_string_hex_to_int64_with_prefix(#0)")
 (FFI:DEFCBODY GODOT-STRING-HEX-TO-INT64
               ((* 'GODOT-STRING))
               :INT64-T
               "_gdcl_api_CORE_1_0->godot_string_hex_to_int64(#0)")
 (FFI:DEFCBODY GODOT-STRING-CHAR-TO-INT64-WITH-LEN
               ((* GODOT-ECL/UTILS::GODOT-CHAR-TYPE) :INT)
               :INT64-T
               "_gdcl_api_CORE_1_0->godot_string_char_to_int64_with_len(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-CHAR-TO-INT-WITH-LEN
               (:CSTRING 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_char_to_int_with_len(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-WCHAR-TO-INT
               ((* GODOT-ECL/UTILS::GODOT-CHAR-TYPE))
               :INT64-T
               "_gdcl_api_CORE_1_0->godot_string_wchar_to_int(#0)")
 (FFI:DEFCBODY GODOT-STRING-CHAR-TO-INT
               (:CSTRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_char_to_int(#0)")
 (FFI:DEFCBODY GODOT-STRING-CHAR-TO-DOUBLE
               (:CSTRING)
               :DOUBLE
               "_gdcl_api_CORE_1_0->godot_string_char_to_double(#0)")
 (FFI:DEFCBODY GODOT-STRING-CAPITALIZE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_capitalize(#0)")
 (FFI:DEFCBODY GODOT-STRING-CAMELCASE-TO-UNDERSCORE-LOWERCASED
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_camelcase_to_underscore_lowercased(#0)")
 (FFI:DEFCBODY GODOT-STRING-CAMELCASE-TO-UNDERSCORE
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_camelcase_to_underscore(#0)")
 (FFI:DEFCBODY GODOT-STRING-TO-INT
               ((* 'GODOT-STRING))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_to_int(#0)")
 (FFI:DEFCBODY GODOT-STRING-TO-FLOAT
               ((* 'GODOT-STRING))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_string_to_float(#0)")
 (FFI:DEFCBODY GODOT-STRING-TO-DOUBLE
               ((* 'GODOT-STRING))
               :DOUBLE
               "_gdcl_api_CORE_1_0->godot_string_to_double(#0)")
 (FFI:DEFCBODY GODOT-STRING-SUBSTR
               ((* 'GODOT-STRING) 'GODOT-INT 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_substr(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-SPRINTF
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY) (* 'GODOT-BOOL))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_sprintf(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-SIMILARITY
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_string_similarity(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-RPAD-WITH-CUSTOM-CHARACTER
               ((* 'GODOT-STRING) 'GODOT-INT (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_rpad_with_custom_character(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-RPAD
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_rpad(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-RFINDN-FROM
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_rfindn_from(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-RFIND-FROM
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_rfind_from(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-RFINDN
               ((* 'GODOT-STRING) 'GODOT-STRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_rfindn(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-RFIND
               ((* 'GODOT-STRING) 'GODOT-STRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_rfind(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-REPLACEN
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-STRING)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_replacen(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-REPLACE
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-STRING)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_replace(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-REPLACE-FIRST
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-STRING)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_replace_first(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-PAD-ZEROS
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_pad_zeros(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-PAD-DECIMALS
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_pad_decimals(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NUM-WITH-DECIMALS
               (:DOUBLE 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_num_with_decimals(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NUM-SCIENTIFIC
               (:DOUBLE)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_num_scientific(#0)")
 (FFI:DEFCBODY GODOT-STRING-NUM-REAL
               (:DOUBLE)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_num_real(#0)")
 (FFI:DEFCBODY GODOT-STRING-NUM-INT64-CAPITALIZED
               (:INT64-T 'GODOT-INT 'GODOT-BOOL)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_num_int64_capitalized(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-NUM-INT64
               (:INT64-T 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_num_int64(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NUM
               (:DOUBLE)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_num(#0)")
 (FFI:DEFCBODY GODOT-STRING-MD5
               ((* 'UINT8-T))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_md5(#0)")
 (FFI:DEFCBODY GODOT-STRING-MATCHN
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_matchn(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-MATCH
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_match(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-LPAD-WITH-CUSTOM-CHARACTER
               ((* 'GODOT-STRING) 'GODOT-INT (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_lpad_with_custom_character(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-LPAD
               ((* 'GODOT-STRING) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_lpad(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-IS-SUBSEQUENCE-OFI
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_subsequence_ofi(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-IS-SUBSEQUENCE-OF
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_subsequence_of(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-IS-NUMERIC
               ((* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_is_numeric(#0)")
 (FFI:DEFCBODY GODOT-STRING-INSERT
               ((* 'GODOT-STRING) 'GODOT-INT 'GODOT-STRING)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-HEX-TO-INT-WITHOUT-PREFIX
               ((* 'GODOT-STRING))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_hex_to_int_without_prefix(#0)")
 (FFI:DEFCBODY GODOT-STRING-HEX-TO-INT
               ((* 'GODOT-STRING))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_hex_to_int(#0)")
 (FFI:DEFCBODY GODOT-STRING-HEX-ENCODE-BUFFER
               ((* 'UINT8-T) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_hex_encode_buffer(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-FORMAT-WITH-CUSTOM-PLACEHOLDER
               ((* 'GODOT-STRING) (* 'GODOT-VARIANT) :CSTRING)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_format_with_custom_placeholder(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-FORMAT
               ((* 'GODOT-STRING) (* 'GODOT-VARIANT))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_format(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-FIND-LAST
               ((* 'GODOT-STRING) 'GODOT-STRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_find_last(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-FINDN-FROM
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_findn_from(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-FINDN
               ((* 'GODOT-STRING) 'GODOT-STRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_findn(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-FINDMK-FROM-IN-PLACE
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY) 'GODOT-INT (* 'GODOT-INT))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_findmk_from_in_place(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-STRING-FINDMK-FROM
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY) 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_findmk_from(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-FINDMK
               ((* 'GODOT-STRING) (* 'GODOT-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_findmk(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-FIND-FROM
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_find_from(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-FIND
               ((* 'GODOT-STRING) 'GODOT-STRING)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_find(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-ENDS-WITH
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_ends_with(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-CHR
               (GODOT-ECL/UTILS::GODOT-CHAR-TYPE)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_chr(#0)")
 (FFI:DEFCBODY GODOT-STRING-BIGRAMS
               ((* 'GODOT-STRING))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_string_bigrams(#0)")
 (FFI:DEFCBODY GODOT-STRING-BEGINS-WITH-CHAR-ARRAY
               ((* 'GODOT-STRING) :CSTRING)
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_begins_with_char_array(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-BEGINS-WITH
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_begins_with(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NATURALNOCASECMP-TO
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               :CHAR
               "_gdcl_api_CORE_1_0->godot_string_naturalnocasecmp_to(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NOCASECMP-TO
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               :CHAR
               "_gdcl_api_CORE_1_0->godot_string_nocasecmp_to(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-CASECMP-TO
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               :CHAR
               "_gdcl_api_CORE_1_0->godot_string_casecmp_to(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-LENGTH
               ((* 'GODOT-STRING))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_string_length(#0)")
 (FFI:DEFCBODY GODOT-STRING-OPERATOR-PLUS
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_string_operator_plus(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-OPERATOR-LESS
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-OPERATOR-EQUAL
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_string_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-WIDE-STR
               ((* 'GODOT-STRING))
               (* GODOT-ECL/UTILS::GODOT-CHAR-TYPE)
               "_gdcl_api_CORE_1_0->godot_string_wide_str(#0)")
 (FFI:DEFCBODY GODOT-STRING-OPERATOR-INDEX-CONST
               ((* 'GODOT-STRING) 'GODOT-INT)
               GODOT-ECL/UTILS::GODOT-CHAR-TYPE
               "_gdcl_api_CORE_1_0->godot_string_operator_index_const(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-OPERATOR-INDEX
               ((* 'GODOT-STRING) 'GODOT-INT)
               (* GODOT-ECL/UTILS::GODOT-CHAR-TYPE)
               "_gdcl_api_CORE_1_0->godot_string_operator_index(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NEW-WITH-WIDE-STRING
               ((* 'GODOT-STRING) (* GODOT-ECL/UTILS::GODOT-CHAR-TYPE) :INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_new_with_wide_string(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-STRING-NEW-COPY
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-NEW
               ((* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_string_new(#0)")
 (FFI:DEFCBODY GODOT-CHAR-STRING-DESTROY
               ((* 'GODOT-CHAR-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_char_string_destroy(#0)")
 (FFI:DEFCBODY GODOT-CHAR-STRING-GET-DATA
               ((* 'GODOT-CHAR-STRING))
               :CSTRING
               "_gdcl_api_CORE_1_0->godot_char_string_get_data(#0)")
 (FFI:DEFCBODY GODOT-CHAR-STRING-LENGTH
               ((* 'GODOT-CHAR-STRING))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_char_string_length(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-DESTROY
               ((* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_destroy(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-BOOLEANIZE
               ((* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_variant_booleanize(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-HASH-COMPARE
               ((* 'GODOT-VARIANT) (* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_variant_hash_compare(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-OPERATOR-LESS
               ((* 'GODOT-VARIANT) (* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_variant_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-OPERATOR-EQUAL
               ((* 'GODOT-VARIANT) (* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_variant_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-HAS-METHOD
               ((* 'GODOT-VARIANT) (* 'GODOT-STRING))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_variant_has_method(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-CALL
               ((* 'GODOT-VARIANT) (* 'GODOT-STRING) (* (* 'GODOT-VARIANT))
                'GODOT-INT (* 'GODOT-VARIANT-CALL-ERROR))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_variant_call(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-COLOR-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-COLOR-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_color_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-VECTOR3-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-VECTOR3-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_vector3_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-VECTOR2-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-VECTOR2-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_vector2_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-STRING-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-STRING-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_string_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-REAL-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-REAL-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_real_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-INT-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-INT-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_int_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-POOL-BYTE-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-POOL-BYTE-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_pool_byte_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-ARRAY
               ((* 'GODOT-VARIANT))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_variant_as_array(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-DICTIONARY
               ((* 'GODOT-VARIANT))
               'GODOT-DICTIONARY
               "_gdcl_api_CORE_1_0->godot_variant_as_dictionary(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-OBJECT
               ((* 'GODOT-VARIANT))
               (* 'GODOT-OBJECT)
               "_gdcl_api_CORE_1_0->godot_variant_as_object(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-RID
               ((* 'GODOT-VARIANT))
               'GODOT-RID
               "_gdcl_api_CORE_1_0->godot_variant_as_rid(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-NODE-PATH
               ((* 'GODOT-VARIANT))
               'GODOT-NODE-PATH
               "_gdcl_api_CORE_1_0->godot_variant_as_node_path(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-COLOR
               ((* 'GODOT-VARIANT))
               'GODOT-COLOR
               "_gdcl_api_CORE_1_0->godot_variant_as_color(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-TRANSFORM
               ((* 'GODOT-VARIANT))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_variant_as_transform(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-BASIS
               ((* 'GODOT-VARIANT))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_variant_as_basis(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-AABB
               ((* 'GODOT-VARIANT))
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_variant_as_aabb(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-QUAT
               ((* 'GODOT-VARIANT))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_variant_as_quat(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-PLANE
               ((* 'GODOT-VARIANT))
               'GODOT-PLANE
               "_gdcl_api_CORE_1_0->godot_variant_as_plane(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-TRANSFORM2D
               ((* 'GODOT-VARIANT))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_variant_as_transform2d(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-VECTOR3
               ((* 'GODOT-VARIANT))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_variant_as_vector3(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-RECT2
               ((* 'GODOT-VARIANT))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_variant_as_rect2(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-VECTOR2
               ((* 'GODOT-VARIANT))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_variant_as_vector2(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-STRING
               ((* 'GODOT-VARIANT))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_variant_as_string(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-REAL
               ((* 'GODOT-VARIANT))
               :DOUBLE
               "_gdcl_api_CORE_1_0->godot_variant_as_real(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-INT
               ((* 'GODOT-VARIANT))
               :INT64-T
               "_gdcl_api_CORE_1_0->godot_variant_as_int(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-UINT
               ((* 'GODOT-VARIANT))
               :UINT64-T
               "_gdcl_api_CORE_1_0->godot_variant_as_uint(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-AS-BOOL
               ((* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_variant_as_bool(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-COLOR-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_color_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-VECTOR3-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_vector3_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-VECTOR2-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_vector2_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-STRING-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_string_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-REAL-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_real_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-INT-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_int_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-POOL-BYTE-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_pool_byte_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-ARRAY
               ((* 'GODOT-VARIANT) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_array(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-DICTIONARY
               ((* 'GODOT-VARIANT) (* 'GODOT-DICTIONARY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_dictionary(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-OBJECT
               ((* 'GODOT-VARIANT) (* 'GODOT-OBJECT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_object(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-RID
               ((* 'GODOT-VARIANT) (* 'GODOT-RID))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_rid(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-NODE-PATH
               ((* 'GODOT-VARIANT) (* 'GODOT-NODE-PATH))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_node_path(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-COLOR
               ((* 'GODOT-VARIANT) (* 'GODOT-COLOR))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_color(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-TRANSFORM
               ((* 'GODOT-VARIANT) (* 'GODOT-TRANSFORM))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_transform(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-BASIS
               ((* 'GODOT-VARIANT) (* 'GODOT-BASIS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_basis(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-AABB
               ((* 'GODOT-VARIANT) (* 'GODOT-AABB))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_aabb(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-QUAT
               ((* 'GODOT-VARIANT) (* 'GODOT-QUAT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_quat(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-PLANE
               ((* 'GODOT-VARIANT) (* 'GODOT-PLANE))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_plane(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-TRANSFORM2D
               ((* 'GODOT-VARIANT) (* 'GODOT-TRANSFORM2D))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_transform2d(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-VECTOR3
               ((* 'GODOT-VARIANT) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_vector3(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-RECT2
               ((* 'GODOT-VARIANT) (* 'GODOT-RECT2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_rect2(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-VECTOR2
               ((* 'GODOT-VARIANT) (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_vector2(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-STRING
               ((* 'GODOT-VARIANT) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_string(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-REAL
               ((* 'GODOT-VARIANT) :DOUBLE)
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_real(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-INT
               ((* 'GODOT-VARIANT) :INT64-T)
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_int(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-UINT
               ((* 'GODOT-VARIANT) :UINT64-T)
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_uint(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-BOOL
               ((* 'GODOT-VARIANT) 'GODOT-BOOL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_bool(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-NIL
               ((* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_nil(#0)")
 (FFI:DEFCBODY GODOT-VARIANT-NEW-COPY
               ((* 'GODOT-VARIANT) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_variant_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-VARIANT-GET-TYPE
               ((* 'GODOT-VARIANT))
               'GODOT-VARIANT-TYPE
               "_gdcl_api_CORE_1_0->godot_variant_get_type(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-XFORM-INV-RECT2
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-RECT2))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_transform2d_xform_inv_rect2(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-XFORM-RECT2
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-RECT2))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_transform2d_xform_rect2(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-NEW-IDENTITY
               ((* 'GODOT-TRANSFORM2D))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform2d_new_identity(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-OPERATOR-MULTIPLY
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-TRANSFORM2D))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_operator_multiply(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-OPERATOR-EQUAL
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-TRANSFORM2D))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_transform2d_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-INTERPOLATE-WITH
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-TRANSFORM2D) 'GODOT-REAL)
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_interpolate_with(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-BASIS-XFORM-INV-VECTOR2
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_transform2d_basis_xform_inv_vector2(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-BASIS-XFORM-VECTOR2
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_transform2d_basis_xform_vector2(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-XFORM-INV-VECTOR2
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_transform2d_xform_inv_vector2(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-XFORM-VECTOR2
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_transform2d_xform_vector2(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-TRANSLATED
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_translated(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-SCALED
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_scaled(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-ROTATED
               ((* 'GODOT-TRANSFORM2D) 'GODOT-REAL)
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_rotated(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-ORTHONORMALIZED
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_orthonormalized(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-GET-SCALE
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_transform2d_get_scale(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-GET-ORIGIN
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_transform2d_get_origin(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-GET-ROTATION
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_transform2d_get_rotation(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-AFFINE-INVERSE
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_affine_inverse(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-INVERSE
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-TRANSFORM2D
               "_gdcl_api_CORE_1_0->godot_transform2d_inverse(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-AS-STRING
               ((* 'GODOT-TRANSFORM2D))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_transform2d_as_string(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-NEW-AXIS-ORIGIN
               ((* 'GODOT-TRANSFORM2D) (* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2)
                (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform2d_new_axis_origin(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-TRANSFORM2D-NEW
               ((* 'GODOT-TRANSFORM2D) 'GODOT-REAL (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform2d_new(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-TRANSFORM-XFORM-INV-AABB
               ((* 'GODOT-TRANSFORM) (* 'GODOT-AABB))
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_transform_xform_inv_aabb(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-XFORM-AABB
               ((* 'GODOT-TRANSFORM) (* 'GODOT-AABB))
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_transform_xform_aabb(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-XFORM-INV-VECTOR3
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_transform_xform_inv_vector3(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-XFORM-VECTOR3
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_transform_xform_vector3(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-OPERATOR-MULTIPLY
               ((* 'GODOT-TRANSFORM) (* 'GODOT-TRANSFORM))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_operator_multiply(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-OPERATOR-EQUAL
               ((* 'GODOT-TRANSFORM) (* 'GODOT-TRANSFORM))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_transform_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-NEW-IDENTITY
               ((* 'GODOT-TRANSFORM))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform_new_identity(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-XFORM-INV-PLANE
               ((* 'GODOT-TRANSFORM) (* 'GODOT-PLANE))
               'GODOT-PLANE
               "_gdcl_api_CORE_1_0->godot_transform_xform_inv_plane(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-XFORM-PLANE
               ((* 'GODOT-TRANSFORM) (* 'GODOT-PLANE))
               'GODOT-PLANE
               "_gdcl_api_CORE_1_0->godot_transform_xform_plane(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-LOOKING-AT
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_looking_at(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-TRANSFORM-TRANSLATED
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_translated(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-SCALED
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_scaled(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-ROTATED
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_rotated(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-TRANSFORM-ORTHONORMALIZED
               ((* 'GODOT-TRANSFORM))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_orthonormalized(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-AFFINE-INVERSE
               ((* 'GODOT-TRANSFORM))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_affine_inverse(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-INVERSE
               ((* 'GODOT-TRANSFORM))
               'GODOT-TRANSFORM
               "_gdcl_api_CORE_1_0->godot_transform_inverse(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-AS-STRING
               ((* 'GODOT-TRANSFORM))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_transform_as_string(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-SET-ORIGIN
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform_set_origin(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-GET-ORIGIN
               ((* 'GODOT-TRANSFORM))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_transform_get_origin(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-SET-BASIS
               ((* 'GODOT-TRANSFORM) (* 'GODOT-BASIS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform_set_basis(#0, #1)")
 (FFI:DEFCBODY GODOT-TRANSFORM-GET-BASIS
               ((* 'GODOT-TRANSFORM))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_transform_get_basis(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-NEW
               ((* 'GODOT-TRANSFORM) (* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform_new(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-TRANSFORM-NEW-WITH-AXIS-ORIGIN
               ((* 'GODOT-TRANSFORM) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3)
                (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_transform_new_with_axis_origin(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-RID-OPERATOR-LESS
               ((* 'GODOT-RID) (* 'GODOT-RID))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rid_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-RID-OPERATOR-EQUAL
               ((* 'GODOT-RID) (* 'GODOT-RID))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rid_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-RID-NEW-WITH-RESOURCE
               ((* 'GODOT-RID) (* 'GODOT-OBJECT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_rid_new_with_resource(#0, #1)")
 (FFI:DEFCBODY GODOT-RID-GET-ID
               ((* 'GODOT-RID))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_rid_get_id(#0)")
 (FFI:DEFCBODY GODOT-RID-NEW
               ((* 'GODOT-RID))
               :VOID
               "_gdcl_api_CORE_1_0->godot_rid_new(#0)")
 (FFI:DEFCBODY GODOT-AABB-OPERATOR-EQUAL
               ((* 'GODOT-AABB) (* 'GODOT-AABB))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-GET-ENDPOINT
               ((* 'GODOT-AABB) 'GODOT-INT)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_aabb_get_endpoint(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-GROW
               ((* 'GODOT-AABB) 'GODOT-REAL)
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_aabb_grow(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-EXPAND
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3))
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_aabb_expand(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-GET-SHORTEST-AXIS-SIZE
               ((* 'GODOT-AABB))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_aabb_get_shortest_axis_size(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-SHORTEST-AXIS-INDEX
               ((* 'GODOT-AABB))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_aabb_get_shortest_axis_index(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-SHORTEST-AXIS
               ((* 'GODOT-AABB))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_aabb_get_shortest_axis(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-LONGEST-AXIS-SIZE
               ((* 'GODOT-AABB))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_aabb_get_longest_axis_size(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-LONGEST-AXIS-INDEX
               ((* 'GODOT-AABB))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_aabb_get_longest_axis_index(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-LONGEST-AXIS
               ((* 'GODOT-AABB))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_aabb_get_longest_axis(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-SUPPORT
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_aabb_get_support(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-HAS-POINT
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_has_point(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-INTERSECTS-SEGMENT
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_intersects_segment(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-AABB-INTERSECTS-PLANE
               ((* 'GODOT-AABB) (* 'GODOT-PLANE))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_intersects_plane(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-INTERSECTION
               ((* 'GODOT-AABB) (* 'GODOT-AABB))
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_aabb_intersection(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-MERGE
               ((* 'GODOT-AABB) (* 'GODOT-AABB))
               'GODOT-AABB
               "_gdcl_api_CORE_1_0->godot_aabb_merge(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-ENCLOSES
               ((* 'GODOT-AABB) (* 'GODOT-AABB))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_encloses(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-INTERSECTS
               ((* 'GODOT-AABB) (* 'GODOT-AABB))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_intersects(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-HAS-NO-SURFACE
               ((* 'GODOT-AABB))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_has_no_surface(#0)")
 (FFI:DEFCBODY GODOT-AABB-HAS-NO-AREA
               ((* 'GODOT-AABB))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_aabb_has_no_area(#0)")
 (FFI:DEFCBODY GODOT-AABB-GET-AREA
               ((* 'GODOT-AABB))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_aabb_get_area(#0)")
 (FFI:DEFCBODY GODOT-AABB-AS-STRING
               ((* 'GODOT-AABB))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_aabb_as_string(#0)")
 (FFI:DEFCBODY GODOT-AABB-SET-SIZE
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_aabb_set_size(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-GET-SIZE
               ((* 'GODOT-AABB))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_aabb_get_size(#0)")
 (FFI:DEFCBODY GODOT-AABB-SET-POSITION
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_aabb_set_position(#0, #1)")
 (FFI:DEFCBODY GODOT-AABB-GET-POSITION
               ((* 'GODOT-AABB))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_aabb_get_position(#0)")
 (FFI:DEFCBODY GODOT-AABB-NEW
               ((* 'GODOT-AABB) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_aabb_new(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-RECT2-SET-SIZE
               ((* 'GODOT-RECT2) (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_rect2_set_size(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-SET-POSITION
               ((* 'GODOT-RECT2) (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_rect2_set_position(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-GET-SIZE
               ((* 'GODOT-RECT2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_rect2_get_size(#0)")
 (FFI:DEFCBODY GODOT-RECT2-GET-POSITION
               ((* 'GODOT-RECT2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_rect2_get_position(#0)")
 (FFI:DEFCBODY GODOT-RECT2-OPERATOR-EQUAL
               ((* 'GODOT-RECT2) (* 'GODOT-RECT2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rect2_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-EXPAND
               ((* 'GODOT-RECT2) (* 'GODOT-VECTOR2))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_rect2_expand(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-GROW
               ((* 'GODOT-RECT2) 'GODOT-REAL)
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_rect2_grow(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-HAS-POINT
               ((* 'GODOT-RECT2) (* 'GODOT-VECTOR2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rect2_has_point(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-MERGE
               ((* 'GODOT-RECT2) (* 'GODOT-RECT2))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_rect2_merge(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-CLIP
               ((* 'GODOT-RECT2) (* 'GODOT-RECT2))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_0->godot_rect2_clip(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-HAS-NO-AREA
               ((* 'GODOT-RECT2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rect2_has_no_area(#0)")
 (FFI:DEFCBODY GODOT-RECT2-ENCLOSES
               ((* 'GODOT-RECT2) (* 'GODOT-RECT2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rect2_encloses(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-INTERSECTS
               ((* 'GODOT-RECT2) (* 'GODOT-RECT2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_rect2_intersects(#0, #1)")
 (FFI:DEFCBODY GODOT-RECT2-GET-AREA
               ((* 'GODOT-RECT2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_rect2_get_area(#0)")
 (FFI:DEFCBODY GODOT-RECT2-AS-STRING
               ((* 'GODOT-RECT2))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_rect2_as_string(#0)")
 (FFI:DEFCBODY GODOT-RECT2-NEW
               ((* 'GODOT-RECT2) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL
                'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_rect2_new(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-RECT2-NEW-WITH-POSITION-AND-SIZE
               ((* 'GODOT-RECT2) (* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_rect2_new_with_position_and_size(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-PLANE-SET-D
               ((* 'GODOT-PLANE) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_plane_set_d(#0, #1)")
 (FFI:DEFCBODY GODOT-PLANE-GET-D
               ((* 'GODOT-PLANE))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_plane_get_d(#0)")
 (FFI:DEFCBODY GODOT-PLANE-GET-NORMAL
               ((* 'GODOT-PLANE))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_plane_get_normal(#0)")
 (FFI:DEFCBODY GODOT-PLANE-SET-NORMAL
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_plane_set_normal(#0, #1)")
 (FFI:DEFCBODY GODOT-PLANE-OPERATOR-EQUAL
               ((* 'GODOT-PLANE) (* 'GODOT-PLANE))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_plane_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-PLANE-OPERATOR-NEG
               ((* 'GODOT-PLANE))
               'GODOT-PLANE
               "_gdcl_api_CORE_1_0->godot_plane_operator_neg(#0)")
 (FFI:DEFCBODY GODOT-PLANE-INTERSECTS-SEGMENT
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3)
                (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_plane_intersects_segment(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-PLANE-INTERSECTS-RAY
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3)
                (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_plane_intersects_ray(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-PLANE-INTERSECT-3
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3) (* 'GODOT-PLANE)
                (* 'GODOT-PLANE))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_plane_intersect_3(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-PLANE-PROJECT
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_plane_project(#0, #1)")
 (FFI:DEFCBODY GODOT-PLANE-HAS-POINT
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_plane_has_point(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-PLANE-DISTANCE-TO
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_plane_distance_to(#0, #1)")
 (FFI:DEFCBODY GODOT-PLANE-IS-POINT-OVER
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_plane_is_point_over(#0, #1)")
 (FFI:DEFCBODY GODOT-PLANE-GET-ANY-POINT
               ((* 'GODOT-PLANE))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_plane_get_any_point(#0)")
 (FFI:DEFCBODY GODOT-PLANE-CENTER
               ((* 'GODOT-PLANE))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_plane_center(#0)")
 (FFI:DEFCBODY GODOT-PLANE-NORMALIZED
               ((* 'GODOT-PLANE))
               'GODOT-PLANE
               "_gdcl_api_CORE_1_0->godot_plane_normalized(#0)")
 (FFI:DEFCBODY GODOT-PLANE-AS-STRING
               ((* 'GODOT-PLANE))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_plane_as_string(#0)")
 (FFI:DEFCBODY GODOT-PLANE-NEW-WITH-NORMAL
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_plane_new_with_normal(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-PLANE-NEW-WITH-VECTORS
               ((* 'GODOT-PLANE) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3)
                (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_plane_new_with_vectors(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-PLANE-NEW-WITH-REALS
               ((* 'GODOT-PLANE) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL
                'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_plane_new_with_reals(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-NODE-PATH-OPERATOR-EQUAL
               ((* 'GODOT-NODE-PATH) (* 'GODOT-NODE-PATH))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_node_path_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-NODE-PATH-IS-EMPTY
               ((* 'GODOT-NODE-PATH))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_node_path_is_empty(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-GET-CONCATENATED-SUBNAMES
               ((* 'GODOT-NODE-PATH))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_node_path_get_concatenated_subnames(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-GET-SUBNAME
               ((* 'GODOT-NODE-PATH) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_node_path_get_subname(#0, #1)")
 (FFI:DEFCBODY GODOT-NODE-PATH-GET-SUBNAME-COUNT
               ((* 'GODOT-NODE-PATH))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_node_path_get_subname_count(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-GET-NAME
               ((* 'GODOT-NODE-PATH) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_node_path_get_name(#0, #1)")
 (FFI:DEFCBODY GODOT-NODE-PATH-GET-NAME-COUNT
               ((* 'GODOT-NODE-PATH))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_node_path_get_name_count(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-IS-ABSOLUTE
               ((* 'GODOT-NODE-PATH))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_node_path_is_absolute(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-AS-STRING
               ((* 'GODOT-NODE-PATH))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_node_path_as_string(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-DESTROY
               ((* 'GODOT-NODE-PATH))
               :VOID
               "_gdcl_api_CORE_1_0->godot_node_path_destroy(#0)")
 (FFI:DEFCBODY GODOT-NODE-PATH-NEW-COPY
               ((* 'GODOT-NODE-PATH) (* 'GODOT-NODE-PATH))
               :VOID
               "_gdcl_api_CORE_1_0->godot_node_path_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-NODE-PATH-NEW
               ((* 'GODOT-NODE-PATH) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_node_path_new(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-TO-JSON
               ((* 'GODOT-DICTIONARY))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_dictionary_to_json(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-OPERATOR-EQUAL
               ((* 'GODOT-DICTIONARY) (* 'GODOT-DICTIONARY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_dictionary_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-NEXT
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               (* 'GODOT-VARIANT)
               "_gdcl_api_CORE_1_0->godot_dictionary_next(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-OPERATOR-INDEX-CONST
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               (* 'GODOT-VARIANT)
               "_gdcl_api_CORE_1_0->godot_dictionary_operator_index_const(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-OPERATOR-INDEX
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               (* 'GODOT-VARIANT)
               "_gdcl_api_CORE_1_0->godot_dictionary_operator_index(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-SET
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_dictionary_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-DICTIONARY-GET
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_dictionary_get(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-VALUES
               ((* 'GODOT-DICTIONARY))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_dictionary_values(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-KEYS
               ((* 'GODOT-DICTIONARY))
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_0->godot_dictionary_keys(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-HASH
               ((* 'GODOT-DICTIONARY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_dictionary_hash(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-ERASE
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_dictionary_erase(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-HAS-ALL
               ((* 'GODOT-DICTIONARY) (* 'GODOT-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_dictionary_has_all(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-HAS
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_dictionary_has(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-CLEAR
               ((* 'GODOT-DICTIONARY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_dictionary_clear(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-EMPTY
               ((* 'GODOT-DICTIONARY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_dictionary_empty(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-SIZE
               ((* 'GODOT-DICTIONARY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_dictionary_size(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-DESTROY
               ((* 'GODOT-DICTIONARY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_dictionary_destroy(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-NEW-COPY
               ((* 'GODOT-DICTIONARY) (* 'GODOT-DICTIONARY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_dictionary_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-NEW
               ((* 'GODOT-DICTIONARY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_dictionary_new(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-DESTROY
               ((* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-BSEARCH-CUSTOM
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT) (* 'GODOT-OBJECT)
                (* 'GODOT-STRING) 'GODOT-BOOL)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_bsearch_custom(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-ARRAY-BSEARCH
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT) 'GODOT-BOOL)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_bsearch(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-SORT-CUSTOM
               ((* 'GODOT-ARRAY) (* 'GODOT-OBJECT) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_sort_custom(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-SORT
               ((* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_sort(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-SIZE
               ((* 'GODOT-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_size(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-RFIND
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT) 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_rfind(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-RESIZE
               ((* 'GODOT-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-REMOVE
               ((* 'GODOT-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-PUSH-FRONT
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_push_front(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-PUSH-BACK
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-POP-FRONT
               ((* 'GODOT-ARRAY))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_array_pop_front(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-POP-BACK
               ((* 'GODOT-ARRAY))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_array_pop_back(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-INVERT
               ((* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_invert(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-INSERT
               ((* 'GODOT-ARRAY) 'GODOT-INT (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-HASH
               ((* 'GODOT-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_hash(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-HAS
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_array_has(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-FIND-LAST
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_find_last(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-FIND
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT) 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_find(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-BACK
               ((* 'GODOT-ARRAY))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_array_back(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-FRONT
               ((* 'GODOT-ARRAY))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_array_front(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-ERASE
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_erase(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-EMPTY
               ((* 'GODOT-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_array_empty(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-COUNT
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_array_count(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-CLEAR
               ((* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_clear(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-APPEND
               ((* 'GODOT-ARRAY) (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-OPERATOR-INDEX-CONST
               ((* 'GODOT-ARRAY) 'GODOT-INT)
               (* 'GODOT-VARIANT)
               "_gdcl_api_CORE_1_0->godot_array_operator_index_const(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-OPERATOR-INDEX
               ((* 'GODOT-ARRAY) 'GODOT-INT)
               (* 'GODOT-VARIANT)
               "_gdcl_api_CORE_1_0->godot_array_operator_index(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-GET
               ((* 'GODOT-ARRAY) 'GODOT-INT)
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_0->godot_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-SET
               ((* 'GODOT-ARRAY) 'GODOT-INT (* 'GODOT-VARIANT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-BYTE-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_byte_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-INT-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_int_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-REAL-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_real_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-STRING-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_string_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-VECTOR2-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_vector2_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-VECTOR3-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_vector3_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-POOL-COLOR-ARRAY
               ((* 'GODOT-ARRAY) (* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_pool_color_array(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW-COPY
               ((* 'GODOT-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-ARRAY-NEW
               ((* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS))
               (* 'GODOT-COLOR)
               "_gdcl_api_CORE_1_0->godot_pool_color_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_color_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS))
               (* 'GODOT-VECTOR3)
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS))
               (* 'GODOT-VECTOR2)
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS))
               (* 'GODOT-STRING)
               "_gdcl_api_CORE_1_0->godot_pool_string_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_string_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS))
               (* 'GODOT-REAL)
               "_gdcl_api_CORE_1_0->godot_pool_real_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_real_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS))
               (* 'GODOT-INT)
               "_gdcl_api_CORE_1_0->godot_pool_int_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_int_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-DESTROY
               ((* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_write_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS)
                (* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_write_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-PTR
               ((* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS))
               (* 'UINT8-T)
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_write_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS-COPY
               ((* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS))
               (* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_write_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS))
               (* 'GODOT-COLOR)
               "_gdcl_api_CORE_1_0->godot_pool_color_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_color_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS))
               (* 'GODOT-VECTOR3)
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS))
               (* 'GODOT-VECTOR2)
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS))
               (* 'GODOT-STRING)
               "_gdcl_api_CORE_1_0->godot_pool_string_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_string_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS))
               (* 'GODOT-REAL)
               "_gdcl_api_CORE_1_0->godot_pool_real_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_real_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-INT-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-INT-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-INT-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-INT-ARRAY-READ-ACCESS))
               (* 'GODOT-INT)
               "_gdcl_api_CORE_1_0->godot_pool_int_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-INT-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-INT-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_int_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-READ-ACCESS-DESTROY
               ((* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_read_access_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-READ-ACCESS-OPERATOR-ASSIGN
               ((* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS)
                (* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_read_access_operator_assign(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-READ-ACCESS-PTR
               ((* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS))
               (* 'UINT8-T)
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_read_access_ptr(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-READ-ACCESS-COPY
               ((* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS))
               (* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_read_access_copy(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-DESTROY
               ((* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-SIZE
               ((* 'GODOT-POOL-COLOR-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_color_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-GET
               ((* 'GODOT-POOL-COLOR-ARRAY) 'GODOT-INT)
               'GODOT-COLOR
               "_gdcl_api_CORE_1_0->godot_pool_color_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-SET
               ((* 'GODOT-POOL-COLOR-ARRAY) 'GODOT-INT (* 'GODOT-COLOR))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-WRITE
               ((* 'GODOT-POOL-COLOR-ARRAY))
               (* 'GODOT-POOL-COLOR-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_color_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-READ
               ((* 'GODOT-POOL-COLOR-ARRAY))
               (* 'GODOT-POOL-COLOR-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_color_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-RESIZE
               ((* 'GODOT-POOL-COLOR-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-REMOVE
               ((* 'GODOT-POOL-COLOR-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-COLOR-ARRAY) (* 'GODOT-COLOR))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-INVERT
               ((* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-INSERT
               ((* 'GODOT-POOL-COLOR-ARRAY) 'GODOT-INT (* 'GODOT-COLOR))
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_color_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-COLOR-ARRAY) (* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-APPEND
               ((* 'GODOT-POOL-COLOR-ARRAY) (* 'GODOT-COLOR))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-COLOR-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-COLOR-ARRAY) (* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-NEW
               ((* 'GODOT-POOL-COLOR-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_color_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-DESTROY
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-SIZE
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-GET
               ((* 'GODOT-POOL-VECTOR3-ARRAY) 'GODOT-INT)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-SET
               ((* 'GODOT-POOL-VECTOR3-ARRAY) 'GODOT-INT (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-WRITE
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               (* 'GODOT-POOL-VECTOR3-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-READ
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               (* 'GODOT-POOL-VECTOR3-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-RESIZE
               ((* 'GODOT-POOL-VECTOR3-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-REMOVE
               ((* 'GODOT-POOL-VECTOR3-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-VECTOR3-ARRAY) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-INVERT
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-INSERT
               ((* 'GODOT-POOL-VECTOR3-ARRAY) 'GODOT-INT (* 'GODOT-VECTOR3))
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-VECTOR3-ARRAY) (* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-APPEND
               ((* 'GODOT-POOL-VECTOR3-ARRAY) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-VECTOR3-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-VECTOR3-ARRAY) (* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-NEW
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector3_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-DESTROY
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-SIZE
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-GET
               ((* 'GODOT-POOL-VECTOR2-ARRAY) 'GODOT-INT)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-SET
               ((* 'GODOT-POOL-VECTOR2-ARRAY) 'GODOT-INT (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-WRITE
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               (* 'GODOT-POOL-VECTOR2-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-READ
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               (* 'GODOT-POOL-VECTOR2-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-RESIZE
               ((* 'GODOT-POOL-VECTOR2-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-REMOVE
               ((* 'GODOT-POOL-VECTOR2-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-VECTOR2-ARRAY) (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-INVERT
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-INSERT
               ((* 'GODOT-POOL-VECTOR2-ARRAY) 'GODOT-INT (* 'GODOT-VECTOR2))
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-VECTOR2-ARRAY) (* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-APPEND
               ((* 'GODOT-POOL-VECTOR2-ARRAY) (* 'GODOT-VECTOR2))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-VECTOR2-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-VECTOR2-ARRAY) (* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-NEW
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_vector2_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-DESTROY
               ((* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-SIZE
               ((* 'GODOT-POOL-STRING-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_string_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-GET
               ((* 'GODOT-POOL-STRING-ARRAY) 'GODOT-INT)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_pool_string_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-SET
               ((* 'GODOT-POOL-STRING-ARRAY) 'GODOT-INT (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-WRITE
               ((* 'GODOT-POOL-STRING-ARRAY))
               (* 'GODOT-POOL-STRING-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_string_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-READ
               ((* 'GODOT-POOL-STRING-ARRAY))
               (* 'GODOT-POOL-STRING-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_string_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-RESIZE
               ((* 'GODOT-POOL-STRING-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-REMOVE
               ((* 'GODOT-POOL-STRING-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-STRING-ARRAY) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-INVERT
               ((* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-INSERT
               ((* 'GODOT-POOL-STRING-ARRAY) 'GODOT-INT (* 'GODOT-STRING))
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_string_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-STRING-ARRAY) (* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-APPEND
               ((* 'GODOT-POOL-STRING-ARRAY) (* 'GODOT-STRING))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-STRING-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-STRING-ARRAY) (* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-NEW
               ((* 'GODOT-POOL-STRING-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_string_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-DESTROY
               ((* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-SIZE
               ((* 'GODOT-POOL-REAL-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_real_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-GET
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-INT)
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_pool_real_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-SET
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-INT 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-WRITE
               ((* 'GODOT-POOL-REAL-ARRAY))
               (* 'GODOT-POOL-REAL-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_real_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-READ
               ((* 'GODOT-POOL-REAL-ARRAY))
               (* 'GODOT-POOL-REAL-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_real_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-RESIZE
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-REMOVE
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-INVERT
               ((* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-INSERT
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-INT 'GODOT-REAL)
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_real_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-REAL-ARRAY) (* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-APPEND
               ((* 'GODOT-POOL-REAL-ARRAY) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-REAL-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-REAL-ARRAY) (* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-NEW
               ((* 'GODOT-POOL-REAL-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_real_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-DESTROY
               ((* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-SIZE
               ((* 'GODOT-POOL-INT-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_int_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-GET
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_int_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-SET
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-WRITE
               ((* 'GODOT-POOL-INT-ARRAY))
               (* 'GODOT-POOL-INT-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_int_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-READ
               ((* 'GODOT-POOL-INT-ARRAY))
               (* 'GODOT-POOL-INT-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_int_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-RESIZE
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-REMOVE
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-INVERT
               ((* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-INSERT
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT 'GODOT-INT)
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_int_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-INT-ARRAY) (* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-APPEND
               ((* 'GODOT-POOL-INT-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-INT-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-INT-ARRAY) (* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-NEW
               ((* 'GODOT-POOL-INT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_int_array_new(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-DESTROY
               ((* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_destroy(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-SIZE
               ((* 'GODOT-POOL-BYTE-ARRAY))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_size(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-GET
               ((* 'GODOT-POOL-BYTE-ARRAY) 'GODOT-INT)
               'UINT8-T
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_get(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-SET
               ((* 'GODOT-POOL-BYTE-ARRAY) 'GODOT-INT 'UINT8-T)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_set(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-WRITE
               ((* 'GODOT-POOL-BYTE-ARRAY))
               (* 'GODOT-POOL-BYTE-ARRAY-WRITE-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_write(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-READ
               ((* 'GODOT-POOL-BYTE-ARRAY))
               (* 'GODOT-POOL-BYTE-ARRAY-READ-ACCESS)
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_read(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-RESIZE
               ((* 'GODOT-POOL-BYTE-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_resize(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-REMOVE
               ((* 'GODOT-POOL-BYTE-ARRAY) 'GODOT-INT)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_remove(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-PUSH-BACK
               ((* 'GODOT-POOL-BYTE-ARRAY) 'UINT8-T)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_push_back(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-INVERT
               ((* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_invert(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-INSERT
               ((* 'GODOT-POOL-BYTE-ARRAY) 'GODOT-INT 'UINT8-T)
               'GODOT-ERROR
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_insert(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-APPEND-ARRAY
               ((* 'GODOT-POOL-BYTE-ARRAY) (* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_append_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-APPEND
               ((* 'GODOT-POOL-BYTE-ARRAY) 'UINT8-T)
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_append(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-NEW-WITH-ARRAY
               ((* 'GODOT-POOL-BYTE-ARRAY) (* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_new_with_array(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-NEW-COPY
               ((* 'GODOT-POOL-BYTE-ARRAY) (* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_new_copy(#0, #1)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-NEW
               ((* 'GODOT-POOL-BYTE-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_0->godot_pool_byte_array_new(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-GET-AXIS
               ((* 'GODOT-VECTOR3) 'GODOT-VECTOR3-AXIS)
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_get_axis(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-SET-AXIS
               ((* 'GODOT-VECTOR3) 'GODOT-VECTOR3-AXIS 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_vector3_set_axis(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-NEG
               ((* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_neg(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-LESS
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_vector3_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-EQUAL
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_vector3_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-DIVIDE-SCALAR
               ((* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_divide_scalar(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-DIVIDE-VECTOR
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_divide_vector(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-MULTIPLY-SCALAR
               ((* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_multiply_scalar(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-MULTIPLY-VECTOR
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_multiply_vector(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-SUBTRACT
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_subtract(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-OPERATOR-ADD
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_operator_add(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-REFLECT
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_reflect(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-BOUNCE
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_bounce(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-SLIDE
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_slide(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-ANGLE-TO
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_angle_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-DISTANCE-SQUARED-TO
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_distance_squared_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-DISTANCE-TO
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_distance_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-CEIL
               ((* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_ceil(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-FLOOR
               ((* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_floor(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-ABS
               ((* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_abs(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-TO-DIAGONAL-MATRIX
               ((* 'GODOT-VECTOR3))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_vector3_to_diagonal_matrix(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-OUTER
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_vector3_outer(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-CROSS
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_cross(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-DOT
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_dot(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-CUBIC-INTERPOLATE
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3)
                (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_cubic_interpolate(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VECTOR3-LINEAR-INTERPOLATE
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_linear_interpolate(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-VECTOR3-ROTATED
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_rotated(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-VECTOR3-SNAPPED
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_snapped(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-INVERSE
               ((* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_inverse(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-NORMALIZED
               ((* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_vector3_normalized(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-IS-NORMALIZED
               ((* 'GODOT-VECTOR3))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_vector3_is_normalized(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-LENGTH-SQUARED
               ((* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_length_squared(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-LENGTH
               ((* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector3_length(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-MAX-AXIS
               ((* 'GODOT-VECTOR3))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_vector3_max_axis(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-MIN-AXIS
               ((* 'GODOT-VECTOR3))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_vector3_min_axis(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-AS-STRING
               ((* 'GODOT-VECTOR3))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_vector3_as_string(#0)")
 (FFI:DEFCBODY GODOT-VECTOR3-NEW
               ((* 'GODOT-VECTOR3) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_vector3_new(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-BASIS-OPERATOR-MULTIPLY-SCALAR
               ((* 'GODOT-BASIS) 'GODOT-REAL)
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_operator_multiply_scalar(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-OPERATOR-MULTIPLY-VECTOR
               ((* 'GODOT-BASIS) (* 'GODOT-BASIS))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_operator_multiply_vector(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-OPERATOR-SUBTRACT
               ((* 'GODOT-BASIS) (* 'GODOT-BASIS))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_operator_subtract(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-OPERATOR-ADD
               ((* 'GODOT-BASIS) (* 'GODOT-BASIS))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_operator_add(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-OPERATOR-EQUAL
               ((* 'GODOT-BASIS) (* 'GODOT-BASIS))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_basis_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-SET-ROW
               ((* 'GODOT-BASIS) 'GODOT-INT (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_set_row(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-GET-ROW
               ((* 'GODOT-BASIS) 'GODOT-INT)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_basis_get_row(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-SET-AXIS
               ((* 'GODOT-BASIS) 'GODOT-INT (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_set_axis(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-GET-AXIS
               ((* 'GODOT-BASIS) 'GODOT-INT)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_basis_get_axis(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-GET-ELEMENTS
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_get_elements(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-NEW-WITH-EULER-QUAT
               ((* 'GODOT-BASIS) (* 'GODOT-QUAT))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_new_with_euler_quat(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-NEW
               ((* 'GODOT-BASIS))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_new(#0)")
 (FFI:DEFCBODY GODOT-BASIS-GET-ORTHOGONAL-INDEX
               ((* 'GODOT-BASIS))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_basis_get_orthogonal_index(#0)")
 (FFI:DEFCBODY GODOT-BASIS-XFORM-INV
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_basis_xform_inv(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-XFORM
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_basis_xform(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-TDOTZ
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_basis_tdotz(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-TDOTY
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_basis_tdoty(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-TDOTX
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_basis_tdotx(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-GET-EULER
               ((* 'GODOT-BASIS))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_basis_get_euler(#0)")
 (FFI:DEFCBODY GODOT-BASIS-GET-SCALE
               ((* 'GODOT-BASIS))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_basis_get_scale(#0)")
 (FFI:DEFCBODY GODOT-BASIS-SCALED
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_scaled(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-ROTATED
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_rotated(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-DETERMINANT
               ((* 'GODOT-BASIS))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_basis_determinant(#0)")
 (FFI:DEFCBODY GODOT-BASIS-ORTHONORMALIZED
               ((* 'GODOT-BASIS))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_orthonormalized(#0)")
 (FFI:DEFCBODY GODOT-BASIS-TRANSPOSED
               ((* 'GODOT-BASIS))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_transposed(#0)")
 (FFI:DEFCBODY GODOT-BASIS-INVERSE
               ((* 'GODOT-BASIS))
               'GODOT-BASIS
               "_gdcl_api_CORE_1_0->godot_basis_inverse(#0)")
 (FFI:DEFCBODY GODOT-BASIS-AS-STRING
               ((* 'GODOT-BASIS))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_basis_as_string(#0)")
 (FFI:DEFCBODY GODOT-BASIS-NEW-WITH-EULER
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_new_with_euler(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-NEW-WITH-AXIS-AND-ANGLE
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_new_with_axis_and_angle(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-NEW-WITH-ROWS
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3)
                (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_0->godot_basis_new_with_rows(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-QUAT-OPERATOR-NEG
               ((* 'GODOT-QUAT))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_operator_neg(#0)")
 (FFI:DEFCBODY GODOT-QUAT-OPERATOR-EQUAL
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_quat_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-OPERATOR-DIVIDE
               ((* 'GODOT-QUAT) 'GODOT-REAL)
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_operator_divide(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-OPERATOR-SUBTRACT
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_operator_subtract(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-OPERATOR-ADD
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_operator_add(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-OPERATOR-MULTIPLY
               ((* 'GODOT-QUAT) 'GODOT-REAL)
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_operator_multiply(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-CUBIC-SLERP
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT) (* 'GODOT-QUAT) (* 'GODOT-QUAT)
                'GODOT-REAL)
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_cubic_slerp(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-QUAT-SLERPNI
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT) 'GODOT-REAL)
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_slerpni(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-QUAT-SLERP
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT) 'GODOT-REAL)
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_slerp(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-QUAT-XFORM
               ((* 'GODOT-QUAT) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_0->godot_quat_xform(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-DOT
               ((* 'GODOT-QUAT) (* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_dot(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-INVERSE
               ((* 'GODOT-QUAT))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_inverse(#0)")
 (FFI:DEFCBODY GODOT-QUAT-IS-NORMALIZED
               ((* 'GODOT-QUAT))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_quat_is_normalized(#0)")
 (FFI:DEFCBODY GODOT-QUAT-NORMALIZED
               ((* 'GODOT-QUAT))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_0->godot_quat_normalized(#0)")
 (FFI:DEFCBODY GODOT-QUAT-LENGTH-SQUARED
               ((* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_length_squared(#0)")
 (FFI:DEFCBODY GODOT-QUAT-LENGTH
               ((* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_length(#0)")
 (FFI:DEFCBODY GODOT-QUAT-AS-STRING
               ((* 'GODOT-QUAT))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_quat_as_string(#0)")
 (FFI:DEFCBODY GODOT-QUAT-SET-W
               ((* 'GODOT-QUAT) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_quat_set_w(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-GET-W
               ((* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_get_w(#0)")
 (FFI:DEFCBODY GODOT-QUAT-SET-Z
               ((* 'GODOT-QUAT) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_quat_set_z(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-GET-Z
               ((* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_get_z(#0)")
 (FFI:DEFCBODY GODOT-QUAT-SET-Y
               ((* 'GODOT-QUAT) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_quat_set_y(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-GET-Y
               ((* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_get_y(#0)")
 (FFI:DEFCBODY GODOT-QUAT-SET-X
               ((* 'GODOT-QUAT) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_quat_set_x(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-GET-X
               ((* 'GODOT-QUAT))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_quat_get_x(#0)")
 (FFI:DEFCBODY GODOT-QUAT-NEW-WITH-AXIS-ANGLE
               ((* 'GODOT-QUAT) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_quat_new_with_axis_angle(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-QUAT-NEW
               ((* 'GODOT-QUAT) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL
                'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_quat_new(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VECTOR2-GET-Y
               ((* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_get_y(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-GET-X
               ((* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_get_x(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-SET-Y
               ((* 'GODOT-VECTOR2) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_vector2_set_y(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-SET-X
               ((* 'GODOT-VECTOR2) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_vector2_set_x(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-NEG
               ((* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_neg(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-LESS
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_vector2_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-EQUAL
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_vector2_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-DIVIDE-SCALAR
               ((* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_divide_scalar(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-DIVIDE-VECTOR
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_divide_vector(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-MULTIPLY-SCALAR
               ((* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_multiply_scalar(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-MULTIPLY-VECTOR
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_multiply_vector(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-SUBTRACT
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_subtract(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-OPERATOR-ADD
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_operator_add(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-CLAMPED
               ((* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_clamped(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-ABS
               ((* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_abs(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-REFLECT
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_reflect(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-BOUNCE
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_bounce(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-SLIDE
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_slide(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-DOT
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_dot(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-ASPECT
               ((* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_aspect(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-SNAPPED
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_snapped(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-FLOOR
               ((* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_floor(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-TANGENT
               ((* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_tangent(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-ROTATED
               ((* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_rotated(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-CUBIC-INTERPOLATE
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2)
                (* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_cubic_interpolate(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VECTOR2-LINEAR-INTERPOLATE
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_linear_interpolate(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-VECTOR2-ANGLE-TO-POINT
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_angle_to_point(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-ANGLE-TO
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_angle_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-DISTANCE-SQUARED-TO
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_distance_squared_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-DISTANCE-TO
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_distance_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR2-IS-NORMALIZED
               ((* 'GODOT-VECTOR2))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_vector2_is_normalized(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-LENGTH-SQUARED
               ((* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_length_squared(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-ANGLE
               ((* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_angle(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-LENGTH
               ((* 'GODOT-VECTOR2))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_vector2_length(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-NORMALIZED
               ((* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_0->godot_vector2_normalized(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-AS-STRING
               ((* 'GODOT-VECTOR2))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_vector2_as_string(#0)")
 (FFI:DEFCBODY GODOT-VECTOR2-NEW
               ((* 'GODOT-VECTOR2) 'GODOT-REAL 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_vector2_new(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-COLOR-OPERATOR-LESS
               ((* 'GODOT-COLOR) (* 'GODOT-COLOR))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_color_operator_less(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-OPERATOR-EQUAL
               ((* 'GODOT-COLOR) (* 'GODOT-COLOR))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_0->godot_color_operator_equal(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-TO-HTML
               ((* 'GODOT-COLOR) 'GODOT-BOOL)
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_color_to_html(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-BLEND
               ((* 'GODOT-COLOR) (* 'GODOT-COLOR))
               'GODOT-COLOR
               "_gdcl_api_CORE_1_0->godot_color_blend(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-LINEAR-INTERPOLATE
               ((* 'GODOT-COLOR) (* 'GODOT-COLOR) 'GODOT-REAL)
               'GODOT-COLOR
               "_gdcl_api_CORE_1_0->godot_color_linear_interpolate(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-COLOR-CONTRASTED
               ((* 'GODOT-COLOR))
               'GODOT-COLOR
               "_gdcl_api_CORE_1_0->godot_color_contrasted(#0)")
 (FFI:DEFCBODY GODOT-COLOR-INVERTED
               ((* 'GODOT-COLOR))
               'GODOT-COLOR
               "_gdcl_api_CORE_1_0->godot_color_inverted(#0)")
 (FFI:DEFCBODY GODOT-COLOR-GRAY
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_gray(#0)")
 (FFI:DEFCBODY GODOT-COLOR-TO-ARGB32
               ((* 'GODOT-COLOR))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_color_to_argb32(#0)")
 (FFI:DEFCBODY GODOT-COLOR-TO-RGBA32
               ((* 'GODOT-COLOR))
               'GODOT-INT
               "_gdcl_api_CORE_1_0->godot_color_to_rgba32(#0)")
 (FFI:DEFCBODY GODOT-COLOR-AS-STRING
               ((* 'GODOT-COLOR))
               'GODOT-STRING
               "_gdcl_api_CORE_1_0->godot_color_as_string(#0)")
 (FFI:DEFCBODY GODOT-COLOR-GET-V
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_v(#0)")
 (FFI:DEFCBODY GODOT-COLOR-GET-S
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_s(#0)")
 (FFI:DEFCBODY GODOT-COLOR-GET-H
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_h(#0)")
 (FFI:DEFCBODY GODOT-COLOR-SET-A
               ((* 'GODOT-COLOR) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_color_set_a(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-GET-A
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_a(#0)")
 (FFI:DEFCBODY GODOT-COLOR-SET-B
               ((* 'GODOT-COLOR) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_color_set_b(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-GET-B
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_b(#0)")
 (FFI:DEFCBODY GODOT-COLOR-SET-G
               ((* 'GODOT-COLOR) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_color_set_g(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-GET-G
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_g(#0)")
 (FFI:DEFCBODY GODOT-COLOR-SET-R
               ((* 'GODOT-COLOR) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_color_set_r(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-GET-R
               ((* 'GODOT-COLOR))
               'GODOT-REAL
               "_gdcl_api_CORE_1_0->godot_color_get_r(#0)")
 (FFI:DEFCBODY GODOT-COLOR-NEW-RGB
               ((* 'GODOT-COLOR) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_color_new_rgb(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-COLOR-NEW-RGBA
               ((* 'GODOT-COLOR) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL
                'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_0->godot_color_new_rgba(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VARIANT-EVALUATE
               ('GODOT-VARIANT-OPERATOR (* 'GODOT-VARIANT) (* 'GODOT-VARIANT)
                (* 'GODOT-VARIANT) (* 'GODOT-BOOL))
               :VOID
               "_gdcl_api_CORE_1_1->godot_variant_evaluate(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VARIANT-GET-OPERATOR-NAME
               ('GODOT-VARIANT-OPERATOR)
               'GODOT-STRING
               "_gdcl_api_CORE_1_1->godot_variant_get_operator_name(#0)")
 (FFI:DEFCBODY GODOT-TRANSFORM-NEW-WITH-QUAT
               ((* 'GODOT-TRANSFORM) (* 'GODOT-QUAT))
               :VOID
               "_gdcl_api_CORE_1_1->godot_transform_new_with_quat(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-NEW-WITH-EULER
               ((* 'GODOT-QUAT) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_1->godot_quat_new_with_euler(#0, #1)")
 (FFI:DEFCBODY GODOT-QUAT-NEW-WITH-BASIS
               ((* 'GODOT-QUAT) (* 'GODOT-BASIS))
               :VOID
               "_gdcl_api_CORE_1_1->godot_quat_new_with_basis(#0, #1)")
 (FFI:DEFCBODY GODOT-IS-INSTANCE-VALID
               ((* 'GODOT-OBJECT))
               'BOOL
               "_gdcl_api_CORE_1_1->godot_is_instance_valid(#0)")
 (FFI:DEFCBODY GODOT-BASIS-SET-QUAT-SCALE
               ((* 'GODOT-BASIS) (* 'GODOT-QUAT) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_1->godot_basis_set_quat_scale(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-SET-EULER-SCALE
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_1->godot_basis_set_euler_scale(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-SET-AXIS-ANGLE-SCALE
               ((* 'GODOT-BASIS) (* 'GODOT-VECTOR3) 'GODOT-REAL
                (* 'GODOT-VECTOR3))
               :VOID
               "_gdcl_api_CORE_1_1->godot_basis_set_axis_angle_scale(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-BASIS-SET-QUAT
               ((* 'GODOT-BASIS) (* 'GODOT-QUAT))
               :VOID
               "_gdcl_api_CORE_1_1->godot_basis_set_quat(#0, #1)")
 (FFI:DEFCBODY GODOT-BASIS-GET-QUAT
               ((* 'GODOT-BASIS))
               'GODOT-QUAT
               "_gdcl_api_CORE_1_1->godot_basis_get_quat(#0)")
 (FFI:DEFCBODY GODOT-STRING-RSPLIT
               ((* 'GODOT-STRING) (* 'GODOT-STRING) 'GODOT-BOOL 'GODOT-INT)
               'GODOT-POOL-STRING-ARRAY
               "_gdcl_api_CORE_1_1->godot_string_rsplit(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-STRING-RSTRIP
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_1->godot_string_rstrip(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-TRIM-SUFFIX
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_1->godot_string_trim_suffix(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-TRIM-PREFIX
               ((* 'GODOT-STRING) (* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_1->godot_string_trim_prefix(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-DEDENT
               ((* 'GODOT-STRING))
               'GODOT-STRING
               "_gdcl_api_CORE_1_1->godot_string_dedent(#0)")
 (FFI:DEFCBODY GODOT-RECT2-ABS
               ((* 'GODOT-RECT2))
               'GODOT-RECT2
               "_gdcl_api_CORE_1_1->godot_rect2_abs(#0)")
 (FFI:DEFCBODY GODOT-RECT2-GROW-MARGIN
               ((* 'GODOT-RECT2) 'GODOT-INT 'GODOT-REAL)
               'GODOT-RECT2
               "_gdcl_api_CORE_1_1->godot_rect2_grow_margin(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-RECT2-GROW-INDIVIDUAL
               ((* 'GODOT-RECT2) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL
                'GODOT-REAL)
               'GODOT-RECT2
               "_gdcl_api_CORE_1_1->godot_rect2_grow_individual(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-QUAT-SET-AXIS-ANGLE
               ((* 'GODOT-QUAT) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               :VOID
               "_gdcl_api_CORE_1_1->godot_quat_set_axis_angle(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-NODE-PATH-GET-AS-PROPERTY-PATH
               ((* 'GODOT-NODE-PATH))
               'GODOT-NODE-PATH
               "_gdcl_api_CORE_1_1->godot_node_path_get_as_property_path(#0)")
 (FFI:DEFCBODY GODOT-DICTIONARY-ERASE-WITH-RETURN
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT))
               'BOOL
               "_gdcl_api_CORE_1_1->godot_dictionary_erase_with_return(#0, #1)")
 (FFI:DEFCBODY GODOT-DICTIONARY-GET-WITH-DEFAULT
               ((* 'GODOT-DICTIONARY) (* 'GODOT-VARIANT) (* 'GODOT-VARIANT))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_1->godot_dictionary_get_with_default(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-BASIS-SLERP
               ((* 'GODOT-BASIS) (* 'GODOT-BASIS) 'GODOT-REAL)
               'GODOT-BASIS
               "_gdcl_api_CORE_1_1->godot_basis_slerp(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARRAY-SHUFFLE
               ((* 'GODOT-ARRAY))
               :VOID
               "_gdcl_api_CORE_1_1->godot_array_shuffle(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-MIN
               ((* 'GODOT-ARRAY))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_1->godot_array_min(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-MAX
               ((* 'GODOT-ARRAY))
               'GODOT-VARIANT
               "_gdcl_api_CORE_1_1->godot_array_max(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-DUPLICATE
               ((* 'GODOT-ARRAY) 'GODOT-BOOL)
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_1->godot_array_duplicate(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-LIGHTENED
               ((* 'GODOT-COLOR) 'GODOT-REAL)
               'GODOT-COLOR
               "_gdcl_api_CORE_1_1->godot_color_lightened(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-FROM-HSV
               ((* 'GODOT-COLOR) 'GODOT-REAL 'GODOT-REAL 'GODOT-REAL
                'GODOT-REAL)
               'GODOT-COLOR
               "_gdcl_api_CORE_1_1->godot_color_from_hsv(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-COLOR-DARKENED
               ((* 'GODOT-COLOR) 'GODOT-REAL)
               'GODOT-COLOR
               "_gdcl_api_CORE_1_1->godot_color_darkened(#0, #1)")
 (FFI:DEFCBODY GODOT-COLOR-TO-RGBA64
               ((* 'GODOT-COLOR))
               'GODOT-INT
               "_gdcl_api_CORE_1_1->godot_color_to_rgba64(#0)")
 (FFI:DEFCBODY GODOT-COLOR-TO-ARGB64
               ((* 'GODOT-COLOR))
               'GODOT-INT
               "_gdcl_api_CORE_1_1->godot_color_to_argb64(#0)")
 (FFI:DEFCBODY GODOT-COLOR-TO-ABGR64
               ((* 'GODOT-COLOR))
               'GODOT-INT
               "_gdcl_api_CORE_1_1->godot_color_to_abgr64(#0)")
 (FFI:DEFCBODY GODOT-COLOR-TO-ABGR32
               ((* 'GODOT-COLOR))
               'GODOT-INT
               "_gdcl_api_CORE_1_1->godot_color_to_abgr32(#0)")
 (FFI:DEFCBODY GODOT-INSTANCE-FROM-ID
               ('GODOT-INT)
               (* 'GODOT-OBJECT)
               "_gdcl_api_CORE_1_2->godot_instance_from_id(#0)")
 (FFI:DEFCBODY GODOT-OBJECT-CAST-TO
               ((* 'GODOT-OBJECT) :POINTER-VOID)
               (* 'GODOT-OBJECT)
               "_gdcl_api_CORE_1_2->godot_object_cast_to(#0, #1)")
 (FFI:DEFCBODY GODOT-GET-CLASS-TAG
               ((* 'GODOT-STRING-NAME))
               :POINTER-VOID
               "_gdcl_api_CORE_1_2->godot_get_class_tag(#0)")
 (FFI:DEFCBODY GODOT-POOL-COLOR-ARRAY-EMPTY
               ((* 'GODOT-POOL-COLOR-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_color_array_empty(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR3-ARRAY-EMPTY
               ((* 'GODOT-POOL-VECTOR3-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_vector3_array_empty(#0)")
 (FFI:DEFCBODY GODOT-POOL-VECTOR2-ARRAY-EMPTY
               ((* 'GODOT-POOL-VECTOR2-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_vector2_array_empty(#0)")
 (FFI:DEFCBODY GODOT-POOL-STRING-ARRAY-EMPTY
               ((* 'GODOT-POOL-STRING-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_string_array_empty(#0)")
 (FFI:DEFCBODY GODOT-POOL-REAL-ARRAY-EMPTY
               ((* 'GODOT-POOL-REAL-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_real_array_empty(#0)")
 (FFI:DEFCBODY GODOT-POOL-INT-ARRAY-EMPTY
               ((* 'GODOT-POOL-INT-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_int_array_empty(#0)")
 (FFI:DEFCBODY GODOT-POOL-BYTE-ARRAY-EMPTY
               ((* 'GODOT-POOL-BYTE-ARRAY))
               'GODOT-BOOL
               "_gdcl_api_CORE_1_2->godot_pool_byte_array_empty(#0)")
 (FFI:DEFCBODY GODOT-ARRAY-SLICE
               ((* 'GODOT-ARRAY) 'GODOT-INT 'GODOT-INT 'GODOT-INT 'GODOT-BOOL)
               'GODOT-ARRAY
               "_gdcl_api_CORE_1_2->godot_array_slice(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-VECTOR2-DIRECTION-TO
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2))
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_2->godot_vector2_direction_to(#0, #1)")
 (FFI:DEFCBODY GODOT-VECTOR3-DIRECTION-TO
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3))
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_2->godot_vector3_direction_to(#0, #1)")
 (FFI:DEFCBODY GODOT-STRING-COUNTN
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_2->godot_string_countn(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-STRING-COUNT
               ((* 'GODOT-STRING) 'GODOT-STRING 'GODOT-INT 'GODOT-INT)
               'GODOT-INT
               "_gdcl_api_CORE_1_2->godot_string_count(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-VECTOR2-MOVE-TOWARD
               ((* 'GODOT-VECTOR2) (* 'GODOT-VECTOR2) 'GODOT-REAL)
               'GODOT-VECTOR2
               "_gdcl_api_CORE_1_2->godot_vector2_move_toward(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-VECTOR3-MOVE-TOWARD
               ((* 'GODOT-VECTOR3) (* 'GODOT-VECTOR3) 'GODOT-REAL)
               'GODOT-VECTOR3
               "_gdcl_api_CORE_1_2->godot_vector3_move_toward(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-DICTIONARY-DUPLICATE
               ((* 'GODOT-DICTIONARY) 'GODOT-BOOL)
               'GODOT-DICTIONARY
               "_gdcl_api_CORE_1_2->godot_dictionary_duplicate(#0, #1)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-GET-USERDATA
               ((* 'GODOT-OBJECT))
               :POINTER-VOID
               "_gdcl_api_nativescript_1_0->godot_nativescript_get_userdata(#0)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-REGISTER-SIGNAL
               (:POINTER-VOID :CSTRING (* 'GODOT-SIGNAL))
               :VOID
               "_gdcl_api_nativescript_1_0->godot_nativescript_register_signal(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-REGISTER-PROPERTY
               (:POINTER-VOID :CSTRING :CSTRING (* 'GODOT-PROPERTY-ATTRIBUTES)
                'GODOT-PROPERTY-SET-FUNC 'GODOT-PROPERTY-GET-FUNC)
               :VOID
               "_gdcl_api_nativescript_1_0->godot_nativescript_register_property(#0, #1, #2, #3, #4, #5)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-REGISTER-METHOD
               (:POINTER-VOID :CSTRING :CSTRING 'GODOT-METHOD-ATTRIBUTES
                'GODOT-INSTANCE-METHOD)
               :VOID
               "_gdcl_api_nativescript_1_0->godot_nativescript_register_method(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-REGISTER-TOOL-CLASS
               (:POINTER-VOID :CSTRING :CSTRING 'GODOT-INSTANCE-CREATE-FUNC
                'GODOT-INSTANCE-DESTROY-FUNC)
               :VOID
               "_gdcl_api_nativescript_1_0->godot_nativescript_register_tool_class(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-REGISTER-CLASS
               (:POINTER-VOID :CSTRING :CSTRING 'GODOT-INSTANCE-CREATE-FUNC
                'GODOT-INSTANCE-DESTROY-FUNC)
               :VOID
               "_gdcl_api_nativescript_1_0->godot_nativescript_register_class(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-PROFILING-ADD-DATA
               (:CSTRING :UINT64-T)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_profiling_add_data(#0, #1)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-GET-INSTANCE-BINDING-DATA
               (:INT (* 'GODOT-OBJECT))
               :POINTER-VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_get_instance_binding_data(#0, #1)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-UNREGISTER-INSTANCE-BINDING-DATA-FUNCTIONS
               (:INT)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_unregister_instance_binding_data_functions(#0)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-REGISTER-INSTANCE-BINDING-DATA-FUNCTIONS
               ('GODOT-INSTANCE-BINDING-FUNCTIONS)
               :INT
               "_gdcl_api_CORE_1_1->godot_nativescript_register_instance_binding_data_functions(#0)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-GET-TYPE-TAG
               ((* 'GODOT-OBJECT))
               :POINTER-VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_get_type_tag(#0)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-TYPE-TAG
               (:POINTER-VOID :CSTRING :POINTER-VOID)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_type_tag(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-GET-GLOBAL-TYPE-TAG
               (:INT :CSTRING)
               :POINTER-VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_get_global_type_tag(#0, #1)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-GLOBAL-TYPE-TAG
               (:INT :CSTRING :POINTER-VOID)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_global_type_tag(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-SIGNAL-DOCUMENTATION
               (:POINTER-VOID :CSTRING :CSTRING 'GODOT-STRING)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_signal_documentation(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-PROPERTY-DOCUMENTATION
               (:POINTER-VOID :CSTRING :CSTRING 'GODOT-STRING)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_property_documentation(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-METHOD-DOCUMENTATION
               (:POINTER-VOID :CSTRING :CSTRING 'GODOT-STRING)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_method_documentation(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-CLASS-DOCUMENTATION
               (:POINTER-VOID :CSTRING 'GODOT-STRING)
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_class_documentation(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-NATIVESCRIPT-SET-METHOD-ARGUMENT-INFORMATION
               (:POINTER-VOID :CSTRING :CSTRING :INT (* 'GODOT-METHOD-ARG))
               :VOID
               "_gdcl_api_CORE_1_1->godot_nativescript_set_method_argument_information(#0, #1, #2, #3, #4)")
 (FFI:DEFCBODY GODOT-PLUGINSCRIPT-REGISTER-LANGUAGE
               ((* 'GODOT-PLUGINSCRIPT-LANGUAGE-DESC))
               :VOID
               "_gdcl_api_pluginscript_1_0->godot_pluginscript_register_language(#0)")
 (FFI:DEFCBODY GODOT-ANDROID-IS-ACTIVITY-RESUMED
               NIL
               'BOOL
               "_gdcl_api_android_1_1->godot_android_is_activity_resumed()")
 (FFI:DEFCBODY GODOT-ANDROID-GET-SURFACE
               NIL
               'JOBJECT
               "_gdcl_api_android_1_1->godot_android_get_surface()")
 (FFI:DEFCBODY GODOT-ANDROID-GET-ACTIVITY
               NIL
               'JOBJECT
               "_gdcl_api_android_1_1->godot_android_get_activity()")
 (FFI:DEFCBODY GODOT-ANDROID-GET-ENV
               NIL
               'JNIENV*
               "_gdcl_api_android_1_1->godot_android_get_env()")
 (FFI:DEFCBODY GODOT-ARVR-GET-CONTROLLER-RUMBLE
               ('GODOT-INT)
               'GODOT-REAL
               "_gdcl_api_arvr_1_1->godot_arvr_get_controller_rumble(#0)")
 (FFI:DEFCBODY GODOT-ARVR-SET-CONTROLLER-AXIS
               ('GODOT-INT 'GODOT-INT 'GODOT-REAL 'GODOT-BOOL)
               :VOID
               "_gdcl_api_arvr_1_1->godot_arvr_set_controller_axis(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-ARVR-SET-CONTROLLER-BUTTON
               ('GODOT-INT 'GODOT-INT 'GODOT-BOOL)
               :VOID
               "_gdcl_api_arvr_1_1->godot_arvr_set_controller_button(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARVR-SET-CONTROLLER-TRANSFORM
               ('GODOT-INT (* 'GODOT-TRANSFORM) 'GODOT-BOOL 'GODOT-BOOL)
               :VOID
               "_gdcl_api_arvr_1_1->godot_arvr_set_controller_transform(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-ARVR-REMOVE-CONTROLLER
               ('GODOT-INT)
               :VOID
               "_gdcl_api_arvr_1_1->godot_arvr_remove_controller(#0)")
 (FFI:DEFCBODY GODOT-ARVR-ADD-CONTROLLER
               (:CSTRING 'GODOT-INT 'GODOT-BOOL 'GODOT-BOOL)
               'GODOT-INT
               "_gdcl_api_arvr_1_1->godot_arvr_add_controller(#0, #1, #2, #3)")
 (FFI:DEFCBODY GODOT-ARVR-GET-TEXID
               ((* 'GODOT-RID))
               'GODOT-INT
               "_gdcl_api_arvr_1_1->godot_arvr_get_texid(#0)")
 (FFI:DEFCBODY GODOT-ARVR-BLIT
               (:INT (* 'GODOT-RID) (* 'GODOT-RECT2))
               :VOID
               "_gdcl_api_arvr_1_1->godot_arvr_blit(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-ARVR-GET-REFERENCE-FRAME
               NIL
               'GODOT-TRANSFORM
               "_gdcl_api_arvr_1_1->godot_arvr_get_reference_frame()")
 (FFI:DEFCBODY GODOT-ARVR-GET-WORLDSCALE
               NIL
               'GODOT-REAL
               "_gdcl_api_arvr_1_1->godot_arvr_get_worldscale()")
 (FFI:DEFCBODY GODOT-ARVR-REGISTER-INTERFACE
               ((* 'GODOT-ARVR-INTERFACE-GDNATIVE))
               :VOID
               "_gdcl_api_arvr_1_1->godot_arvr_register_interface(#0)")
 (FFI:DEFCBODY GODOT-VIDEODECODER-REGISTER-DECODER
               ((* 'GODOT-VIDEODECODER-INTERFACE-GDNATIVE))
               :VOID
               "_gdcl_api_videodecoder_0_1->godot_videodecoder_register_decoder(#0)")
 (FFI:DEFCBODY GODOT-VIDEODECODER-FILE-SEEK
               (:POINTER-VOID :INT64-T :INT)
               :INT64-T
               "_gdcl_api_videodecoder_0_1->godot_videodecoder_file_seek(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-VIDEODECODER-FILE-READ
               (:POINTER-VOID (* 'UINT8-T) :INT)
               'GODOT-INT
               "_gdcl_api_videodecoder_0_1->godot_videodecoder_file_read(#0, #1, #2)")
 (FFI:DEFCBODY GODOT-NET-BIND-MULTIPLAYER-PEER
               ((* 'GODOT-OBJECT) (* 'GODOT-NET-MULTIPLAYER-PEER))
               :VOID
               "_gdcl_api_net_3_1->godot_net_bind_multiplayer_peer(#0, #1)")
 (FFI:DEFCBODY GODOT-NET-BIND-PACKET-PEER
               ((* 'GODOT-OBJECT) (* 'GODOT-NET-PACKET-PEER))
               :VOID
               "_gdcl_api_net_3_1->godot_net_bind_packet_peer(#0, #1)")
 (FFI:DEFCBODY GODOT-NET-BIND-STREAM-PEER
               ((* 'GODOT-OBJECT) (* 'GODOT-NET-STREAM-PEER))
               :VOID
               "_gdcl_api_net_3_1->godot_net_bind_stream_peer(#0, #1)")
 (FFI:DEFCBODY GODOT-NET-BIND-WEBRTC-DATA-CHANNEL
               ((* 'GODOT-OBJECT) (* 'GODOT-NET-WEBRTC-DATA-CHANNEL))
               :VOID
               "_gdcl_api_CORE_3_2->godot_net_bind_webrtc_data_channel(#0, #1)")
 (FFI:DEFCBODY GODOT-NET-BIND-WEBRTC-PEER-CONNECTION
               ((* 'GODOT-OBJECT) (* 'GODOT-NET-WEBRTC-PEER-CONNECTION))
               :VOID
               "_gdcl_api_CORE_3_2->godot_net_bind_webrtc_peer_connection(#0, #1)")
 (FFI:DEFCBODY GODOT-NET-SET-WEBRTC-LIBRARY
               ((* 'GODOT-NET-WEBRTC-LIBRARY))
               'GODOT-ERROR
               "_gdcl_api_CORE_3_2->godot_net_set_webrtc_library(#0)")) 